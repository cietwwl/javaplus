package mongo.gen;import com.mongodb.BasicDBObject;import com.mongodb.DBCollection;import com.mongodb.DBCursor;import com.mongodb.DBObject;import java.util.Iterator;import cn.javaplus.exception.UnImplMethodException;public class LoginDataDao {	private DBCollection	collection;	public LoginDataDao(DBCollection collection) {		this.collection = collection;	}	public void save(LoginDataDto u) {		collection.save(u.toDBObject());	}	public void delete(LoginDataDto u) {		collection.remove(u.toDBObject());	}	public void delete() {		collection.remove(key());	}	public LoginDataDto get() {		DBObject o = collection.findOne(key());		if(o == null) {			return null;		}		LoginDataDto x = new LoginDataDto();		x.fromDBObject(o);		return x;	}	private BasicDBObject key() {		BasicDBObject o = new BasicDBObject();		return o;	}	public LoginDataDtoCursor find() {		return new LoginDataDtoCursor(collection.find());	}	public long getCount() {		return collection.count();	}	public LoginDataDtoCursor findByUname(String uname) {				BasicDBObject o = new BasicDBObject("uname", uname);		return new LoginDataDtoCursor(collection.find(o));	}
	public LoginDataDtoCursor findByDate(long date) {				BasicDBObject o = new BasicDBObject("date", date);		return new LoginDataDtoCursor(collection.find(o));	}
	public void clear () {		collection.drop();	}	public LoginDataDto createDTO() {		return new LoginDataDto();	}	public static class LoginDataDtoCursor implements Iterator<LoginDataDto>, Iterable<LoginDataDto>{		private DBCursor	cursor;		public LoginDataDtoCursor(DBCursor cursor) {			this.cursor = cursor;		}		public boolean hasNext() {			return cursor.hasNext();		}		public LoginDataDto next() {			DBObject next = cursor.next();			LoginDataDto dto = new LoginDataDto();			dto.fromDBObject(next);			return dto;		}		public int getCount() {			return cursor.count();		}		public void remove() {			throw new UnImplMethodException();		}		public Iterator<LoginDataDto> iterator() {			return this;		}	}}