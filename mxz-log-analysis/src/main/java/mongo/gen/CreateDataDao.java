package mongo.gen;import com.mongodb.BasicDBObject;import com.mongodb.DBCollection;import com.mongodb.DBCursor;import com.mongodb.DBObject;import java.util.Iterator;import cn.javaplus.exception.UnImplMethodException;public class CreateDataDao {	private DBCollection	collection;	public CreateDataDao(DBCollection collection) {		this.collection = collection;	}	public void save(CreateDataDto u) {		collection.save(u.toDBObject());	}	public void delete(CreateDataDto u) {		collection.remove(u.toDBObject());	}	public void delete(String uname) {		collection.remove(key(uname));	}	public CreateDataDto get(String uname) {		DBObject o = collection.findOne(key(uname));		if(o == null) {			return null;		}		CreateDataDto x = new CreateDataDto();		x.fromDBObject(o);		return x;	}	private BasicDBObject key(String uname) {		BasicDBObject o = new BasicDBObject();		o.put("_id", uname);		return o;	}	public CreateDataDtoCursor find() {		return new CreateDataDtoCursor(collection.find());	}	public long getCount() {		return collection.count();	}	public CreateDataDtoCursor findByUname(String uname) {		collection.ensureIndex("uname");		BasicDBObject o = new BasicDBObject("uname", uname);		return new CreateDataDtoCursor(collection.find(o));	}
	public CreateDataDtoCursor findByTime(long time) {				BasicDBObject o = new BasicDBObject("time", time);		return new CreateDataDtoCursor(collection.find(o));	}
	public void clear () {		collection.drop();	}	public CreateDataDto createDTO() {		return new CreateDataDto();	}	public static class CreateDataDtoCursor implements Iterator<CreateDataDto>, Iterable<CreateDataDto>{		private DBCursor	cursor;		public CreateDataDtoCursor(DBCursor cursor) {			this.cursor = cursor;		}		public boolean hasNext() {			return cursor.hasNext();		}		public CreateDataDto next() {			DBObject next = cursor.next();			CreateDataDto dto = new CreateDataDto();			dto.fromDBObject(next);			return dto;		}		public int getCount() {			return cursor.count();		}		public void remove() {			throw new UnImplMethodException();		}		public Iterator<CreateDataDto> iterator() {			return this;		}	}}