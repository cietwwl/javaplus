package cn.javaplus.mxzrobot.db;import com.mongodb.BasicDBObject;import com.mongodb.DBCollection;import com.mongodb.DBCursor;import com.mongodb.DBObject;import java.util.Iterator;import cn.javaplus.exception.UnImplMethodException;public class ChatRecordDao {	private DBCollection	collection;	public ChatRecordDao(DBCollection collection) {		this.collection = collection;	}	public void save(ChatRecordDto u) {//		collection.save(u.toDBObject());	}	public void delete(ChatRecordDto u) {		collection.remove(u.toDBObject());	}	public void delete() {		collection.remove(key());	}	public ChatRecordDto get() {		DBObject o = collection.findOne(key());		if(o == null) {			return null;		}		ChatRecordDto x = new ChatRecordDto();		x.fromDBObject(o);		return x;	}	private BasicDBObject key() {		BasicDBObject o = new BasicDBObject();		return o;	}	public ChatRecordDtoCursor find() {		return new ChatRecordDtoCursor(collection.find());	}	public long getCount() {		return collection.count();	}	public ChatRecordDtoCursor findByTime(String time) {				BasicDBObject o = new BasicDBObject("time", time);		return new ChatRecordDtoCursor(collection.find(o));	}
	public ChatRecordDtoCursor findByTalker(String talker) {				BasicDBObject o = new BasicDBObject("talker", talker);		return new ChatRecordDtoCursor(collection.find(o));	}
	public ChatRecordDtoCursor findByContent(String content) {				BasicDBObject o = new BasicDBObject("content", content);		return new ChatRecordDtoCursor(collection.find(o));	}
	public void clear () {		collection.drop();	}	public ChatRecordDto createDTO() {		return new ChatRecordDto();	}	public static class ChatRecordDtoCursor implements Iterator<ChatRecordDto>, Iterable<ChatRecordDto>{		private DBCursor	cursor;		public ChatRecordDtoCursor(DBCursor cursor) {			this.cursor = cursor;		}		public boolean hasNext() {			return cursor.hasNext();		}		public ChatRecordDto next() {			DBObject next = cursor.next();			ChatRecordDto dto = new ChatRecordDto();			dto.fromDBObject(next);			return dto;		}		public int getCount() {			return cursor.count();		}		public void remove() {			throw new UnImplMethodException();		}		public Iterator<ChatRecordDto> iterator() {			return this;		}	}}