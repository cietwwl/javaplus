package cn.javaplus.file;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.Writer;
import java.util.Collection;
import java.util.Enumeration;
import java.util.InvalidPropertiesFormatException;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public interface IProperties {
	String getProperty(Object key);
	int getInt(Object key);
	Object get(String key);
	void list(PrintStream out);
	void list(PrintWriter out);
	Set<String> stringPropertyNames();
	Enumeration<?> propertyNames();
	String getProperty(String key, String defaultValue);
	String getProperty(String key);
	void storeToXML(OutputStream os, String comment, String encoding) throws IOException;
	void storeToXML(OutputStream os, String comment) throws IOException;
	void loadFromXML(InputStream in) throws IOException, InvalidPropertiesFormatException;
	void store(OutputStream out, String comments) throws IOException;
	void store(Writer writer, String comments) throws IOException;
	void save(OutputStream out, String comments);
	Collection<Object> values();
	Set<Entry<Object, Object>> entrySet();
	Set<Object> keySet();
	void clear();
	Object remove(Object key);
	void putAll(Map<? extends Object, ? extends Object> t);
	Object put(Object key, Object value);
	void load(InputStream inStream) throws IOException;
	Object get(Object key);
	boolean containsKey(Object key);
	boolean containsValue(Object value);
	Enumeration<Object> elements();
	boolean contains(Object value);
	Enumeration<Object> keys();
	boolean isEmpty();
	int size();
	void load(Reader reader) throws IOException;
	Object setProperty(String key, String value);
}
