package db.dao.impl;import java.util.List;import db.domain.MissionStar;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class MissionStarDao3 extends MissionStarDao1 {	private static Cache2<Integer, String, MissionStar> cache = new Cache2Impl<Integer, String, MissionStar>();	public static Cache2<Integer, String, MissionStar> getCache() { return cache; }	MissionStarDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(MissionStar mso) {		if(mso == null) {			throw new NullPointerException();		}		super.add(mso);		cache.put(mso.getMissionId(), mso.getUname(), mso);	}		public void addAll(List<MissionStar> msos) {		for(MissionStar mso : msos) {			if(mso == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(msos);		for(MissionStar mso : msos) {			cache.put(mso.getMissionId(), mso.getUname(), mso);		}	}		public void delete(Integer mission_id, String uname) {		super.delete(mission_id, uname);		cache.delete(mission_id, uname);	}	public void delete(MissionStar mso) {		super.delete(mso);		cache.delete(mso.getMissionId(),mso.getUname());	}	public void delete(List<MissionStar> msos) {		for(MissionStar mso : msos) {			delete(mso);		}	}	public void update(MissionStar mso) {		if(mso == null) {			throw new NullPointerException();		}		super.update(mso);		cache.put(mso.getMissionId(), mso.getUname(), mso);	}	public void save(MissionStar mso) {		if(mso == null) {			throw new NullPointerException();		}		super.save(mso);		cache.put(mso.getMissionId(), mso.getUname(), mso);	}		public void save(List<MissionStar> msos) {		for(MissionStar mso : msos) {			save(mso);		}	}	public void update(List<MissionStar> msos) {		for(MissionStar mso : msos) {			update(mso);		}	}	public MissionStar get(Integer mission_id, String uname) {		MissionStar ooo = cache.get(mission_id, uname);		if(ooo == null) {			ooo = super.get(mission_id, uname);			if(ooo != null) {				cache.put(mission_id, uname, ooo);			}		}		return ooo;	}		public List<MissionStar> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<MissionStar> all = super.getAll();			for (MissionStar mso : all) {				cache.put(mso.getMissionId(), mso.getUname(), mso);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}