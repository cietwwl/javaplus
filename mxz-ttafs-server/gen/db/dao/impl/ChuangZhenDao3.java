package db.dao.impl;import java.util.List;import db.domain.ChuangZhen;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class ChuangZhenDao3 extends ChuangZhenDao1 {	private static Cache1<String, ChuangZhen> cache = new Cache1Impl<String, ChuangZhen>();	public static Cache1<String, ChuangZhen> getCache() { return cache; }	ChuangZhenDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(ChuangZhen czo) {		if(czo == null) {			throw new NullPointerException();		}		super.add(czo);		cache.put(czo.getUname(), czo);	}		public void addAll(List<ChuangZhen> czos) {		for(ChuangZhen czo : czos) {			if(czo == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(czos);		for(ChuangZhen czo : czos) {			cache.put(czo.getUname(), czo);		}	}		public void delete(String uname) {		super.delete(uname);		cache.delete(uname);	}	public void delete(ChuangZhen czo) {		super.delete(czo);		cache.delete(czo.getUname());	}	public void delete(List<ChuangZhen> czos) {		for(ChuangZhen czo : czos) {			delete(czo);		}	}	public void update(ChuangZhen czo) {		if(czo == null) {			throw new NullPointerException();		}		super.update(czo);		cache.put(czo.getUname(), czo);	}	public void save(ChuangZhen czo) {		if(czo == null) {			throw new NullPointerException();		}		super.save(czo);		cache.put(czo.getUname(), czo);	}		public void save(List<ChuangZhen> czos) {		for(ChuangZhen czo : czos) {			save(czo);		}	}	public void update(List<ChuangZhen> czos) {		for(ChuangZhen czo : czos) {			update(czo);		}	}	public ChuangZhen get(String uname) {		ChuangZhen ooo = cache.get(uname);		if(ooo == null) {			ooo = super.get(uname);			if(ooo != null) {				cache.put(uname, ooo);			}		}		return ooo;	}		public List<ChuangZhen> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<ChuangZhen> all = super.getAll();			for (ChuangZhen czo : all) {				cache.put(czo.getUname(), czo);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}