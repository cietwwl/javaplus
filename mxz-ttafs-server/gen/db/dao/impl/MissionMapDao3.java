package db.dao.impl;import java.util.List;import db.domain.MissionMap;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class MissionMapDao3 extends MissionMapDao1 {	private static Cache2<String, Integer, MissionMap> cache = new Cache2Impl<String, Integer, MissionMap>();	public static Cache2<String, Integer, MissionMap> getCache() { return cache; }	MissionMapDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(MissionMap mmo) {		if(mmo == null) {			throw new NullPointerException();		}		super.add(mmo);		cache.put(mmo.getIds(), mmo.getTempletId(), mmo);	}		public void addAll(List<MissionMap> mmos) {		for(MissionMap mmo : mmos) {			if(mmo == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(mmos);		for(MissionMap mmo : mmos) {			cache.put(mmo.getIds(), mmo.getTempletId(), mmo);		}	}		public void delete(String ids, Integer templet_id) {		super.delete(ids, templet_id);		cache.delete(ids, templet_id);	}	public void delete(MissionMap mmo) {		super.delete(mmo);		cache.delete(mmo.getIds(),mmo.getTempletId());	}	public void delete(List<MissionMap> mmos) {		for(MissionMap mmo : mmos) {			delete(mmo);		}	}	public void update(MissionMap mmo) {		if(mmo == null) {			throw new NullPointerException();		}		super.update(mmo);		cache.put(mmo.getIds(), mmo.getTempletId(), mmo);	}	public void save(MissionMap mmo) {		if(mmo == null) {			throw new NullPointerException();		}		super.save(mmo);		cache.put(mmo.getIds(), mmo.getTempletId(), mmo);	}		public void save(List<MissionMap> mmos) {		for(MissionMap mmo : mmos) {			save(mmo);		}	}	public void update(List<MissionMap> mmos) {		for(MissionMap mmo : mmos) {			update(mmo);		}	}	public MissionMap get(String ids, Integer templet_id) {		MissionMap ooo = cache.get(ids, templet_id);		if(ooo == null) {			ooo = super.get(ids, templet_id);			if(ooo != null) {				cache.put(ids, templet_id, ooo);			}		}		return ooo;	}		public List<MissionMap> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<MissionMap> all = super.getAll();			for (MissionMap mmo : all) {				cache.put(mmo.getIds(), mmo.getTempletId(), mmo);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}