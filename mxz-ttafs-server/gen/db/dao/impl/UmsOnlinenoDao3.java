package db.dao.impl;import java.util.List;import db.domain.UmsOnlineno;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class UmsOnlinenoDao3 extends UmsOnlinenoDao1 {	private static Cache1<Integer, UmsOnlineno> cache = new Cache1Impl<Integer, UmsOnlineno>();	public static Cache1<Integer, UmsOnlineno> getCache() { return cache; }	UmsOnlinenoDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(UmsOnlineno uoo) {		if(uoo == null) {			throw new NullPointerException();		}		super.add(uoo);		cache.put(uoo.getServerId(), uoo);	}		public void addAll(List<UmsOnlineno> uoos) {		for(UmsOnlineno uoo : uoos) {			if(uoo == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(uoos);		for(UmsOnlineno uoo : uoos) {			cache.put(uoo.getServerId(), uoo);		}	}		public void delete(Integer server_id) {		super.delete(server_id);		cache.delete(server_id);	}	public void delete(UmsOnlineno uoo) {		super.delete(uoo);		cache.delete(uoo.getServerId());	}	public void delete(List<UmsOnlineno> uoos) {		for(UmsOnlineno uoo : uoos) {			delete(uoo);		}	}	public void update(UmsOnlineno uoo) {		if(uoo == null) {			throw new NullPointerException();		}		super.update(uoo);		cache.put(uoo.getServerId(), uoo);	}	public void save(UmsOnlineno uoo) {		if(uoo == null) {			throw new NullPointerException();		}		super.save(uoo);		cache.put(uoo.getServerId(), uoo);	}		public void save(List<UmsOnlineno> uoos) {		for(UmsOnlineno uoo : uoos) {			save(uoo);		}	}	public void update(List<UmsOnlineno> uoos) {		for(UmsOnlineno uoo : uoos) {			update(uoo);		}	}	public UmsOnlineno get(Integer server_id) {		UmsOnlineno ooo = cache.get(server_id);		if(ooo == null) {			ooo = super.get(server_id);			if(ooo != null) {				cache.put(server_id, ooo);			}		}		return ooo;	}		public List<UmsOnlineno> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<UmsOnlineno> all = super.getAll();			for (UmsOnlineno uoo : all) {				cache.put(uoo.getServerId(), uoo);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}