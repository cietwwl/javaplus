package db.dao.impl;import java.util.List;import db.domain.Pvp;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class PvpDao3 extends PvpDao1 {	private static Cache1<String, Pvp> cache = new Cache1Impl<String, Pvp>();	public static Cache1<String, Pvp> getCache() { return cache; }	PvpDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(Pvp pvpo) {		if(pvpo == null) {			throw new NullPointerException();		}		super.add(pvpo);		cache.put(pvpo.getUname(), pvpo);	}		public void addAll(List<Pvp> pvpos) {		for(Pvp pvpo : pvpos) {			if(pvpo == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(pvpos);		for(Pvp pvpo : pvpos) {			cache.put(pvpo.getUname(), pvpo);		}	}		public void delete(String uname) {		super.delete(uname);		cache.delete(uname);	}	public void delete(Pvp pvpo) {		super.delete(pvpo);		cache.delete(pvpo.getUname());	}	public void delete(List<Pvp> pvpos) {		for(Pvp pvpo : pvpos) {			delete(pvpo);		}	}	public void update(Pvp pvpo) {		if(pvpo == null) {			throw new NullPointerException();		}		super.update(pvpo);		cache.put(pvpo.getUname(), pvpo);	}	public void save(Pvp pvpo) {		if(pvpo == null) {			throw new NullPointerException();		}		super.save(pvpo);		cache.put(pvpo.getUname(), pvpo);	}		public void save(List<Pvp> pvpos) {		for(Pvp pvpo : pvpos) {			save(pvpo);		}	}	public void update(List<Pvp> pvpos) {		for(Pvp pvpo : pvpos) {			update(pvpo);		}	}	public Pvp get(String uname) {		Pvp ooo = cache.get(uname);		if(ooo == null) {			ooo = super.get(uname);			if(ooo != null) {				cache.put(uname, ooo);			}		}		return ooo;	}		public List<Pvp> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<Pvp> all = super.getAll();			for (Pvp pvpo : all) {				cache.put(pvpo.getUname(), pvpo);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}