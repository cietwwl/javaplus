package db.dao.impl;import java.util.List;import db.domain.Spirite;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class SpiriteDao3 extends SpiriteDao1 {	private static Cache2<Integer, String, Spirite> cache = new Cache2Impl<Integer, String, Spirite>();	public static Cache2<Integer, String, Spirite> getCache() { return cache; }	SpiriteDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(Spirite spiriteo) {		if(spiriteo == null) {			throw new NullPointerException();		}		super.add(spiriteo);		cache.put(spiriteo.getTypeId(), spiriteo.getUname(), spiriteo);	}		public void addAll(List<Spirite> spiriteos) {		for(Spirite spiriteo : spiriteos) {			if(spiriteo == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(spiriteos);		for(Spirite spiriteo : spiriteos) {			cache.put(spiriteo.getTypeId(), spiriteo.getUname(), spiriteo);		}	}		public void delete(Integer type_id, String uname) {		super.delete(type_id, uname);		cache.delete(type_id, uname);	}	public void delete(Spirite spiriteo) {		super.delete(spiriteo);		cache.delete(spiriteo.getTypeId(),spiriteo.getUname());	}	public void delete(List<Spirite> spiriteos) {		for(Spirite spiriteo : spiriteos) {			delete(spiriteo);		}	}	public void update(Spirite spiriteo) {		if(spiriteo == null) {			throw new NullPointerException();		}		super.update(spiriteo);		cache.put(spiriteo.getTypeId(), spiriteo.getUname(), spiriteo);	}	public void save(Spirite spiriteo) {		if(spiriteo == null) {			throw new NullPointerException();		}		super.save(spiriteo);		cache.put(spiriteo.getTypeId(), spiriteo.getUname(), spiriteo);	}		public void save(List<Spirite> spiriteos) {		for(Spirite spiriteo : spiriteos) {			save(spiriteo);		}	}	public void update(List<Spirite> spiriteos) {		for(Spirite spiriteo : spiriteos) {			update(spiriteo);		}	}	public Spirite get(Integer type_id, String uname) {		Spirite ooo = cache.get(type_id, uname);		if(ooo == null) {			ooo = super.get(type_id, uname);			if(ooo != null) {				cache.put(type_id, uname, ooo);			}		}		return ooo;	}		public List<Spirite> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<Spirite> all = super.getAll();			for (Spirite spiriteo : all) {				cache.put(spiriteo.getTypeId(), spiriteo.getUname(), spiriteo);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}