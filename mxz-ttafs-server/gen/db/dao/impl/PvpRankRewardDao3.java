package db.dao.impl;import java.util.List;import db.domain.PvpRankReward;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class PvpRankRewardDao3 extends PvpRankRewardDao1 {	private static Cache1<String, PvpRankReward> cache = new Cache1Impl<String, PvpRankReward>();	public static Cache1<String, PvpRankReward> getCache() { return cache; }	PvpRankRewardDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(PvpRankReward prro) {		if(prro == null) {			throw new NullPointerException();		}		super.add(prro);		cache.put(prro.getUname(), prro);	}		public void addAll(List<PvpRankReward> prros) {		for(PvpRankReward prro : prros) {			if(prro == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(prros);		for(PvpRankReward prro : prros) {			cache.put(prro.getUname(), prro);		}	}		public void delete(String uname) {		super.delete(uname);		cache.delete(uname);	}	public void delete(PvpRankReward prro) {		super.delete(prro);		cache.delete(prro.getUname());	}	public void delete(List<PvpRankReward> prros) {		for(PvpRankReward prro : prros) {			delete(prro);		}	}	public void update(PvpRankReward prro) {		if(prro == null) {			throw new NullPointerException();		}		super.update(prro);		cache.put(prro.getUname(), prro);	}	public void save(PvpRankReward prro) {		if(prro == null) {			throw new NullPointerException();		}		super.save(prro);		cache.put(prro.getUname(), prro);	}		public void save(List<PvpRankReward> prros) {		for(PvpRankReward prro : prros) {			save(prro);		}	}	public void update(List<PvpRankReward> prros) {		for(PvpRankReward prro : prros) {			update(prro);		}	}	public PvpRankReward get(String uname) {		PvpRankReward ooo = cache.get(uname);		if(ooo == null) {			ooo = super.get(uname);			if(ooo != null) {				cache.put(uname, ooo);			}		}		return ooo;	}		public List<PvpRankReward> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<PvpRankReward> all = super.getAll();			for (PvpRankReward prro : all) {				cache.put(prro.getUname(), prro);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}