package db.dao.impl;import java.util.List;import db.domain.UserGrid;import com.lemon.commons.database.ConnectionFetcher;import java.sql.Connection;import db.domain.*;//带读缓存public class UserGridDao3 extends UserGridDao1 {	private static Cache2<Integer, String, UserGrid> cache = new Cache2Impl<Integer, String, UserGrid>();	public static Cache2<Integer, String, UserGrid> getCache() { return cache; }	UserGridDao3(ConnectionFetcher fetcher) {		super(fetcher);	}	public void add(UserGrid ugo) {		if(ugo == null) {			throw new NullPointerException();		}		super.add(ugo);		cache.put(ugo.getGridId(), ugo.getUname(), ugo);	}		public void addAll(List<UserGrid> ugos) {		for(UserGrid ugo : ugos) {			if(ugo == null) {				throw new NullPointerException("列表中包含空元素!");			}		}		super.addAll(ugos);		for(UserGrid ugo : ugos) {			cache.put(ugo.getGridId(), ugo.getUname(), ugo);		}	}		public void delete(Integer grid_id, String uname) {		super.delete(grid_id, uname);		cache.delete(grid_id, uname);	}	public void delete(UserGrid ugo) {		super.delete(ugo);		cache.delete(ugo.getGridId(),ugo.getUname());	}	public void delete(List<UserGrid> ugos) {		for(UserGrid ugo : ugos) {			delete(ugo);		}	}	public void update(UserGrid ugo) {		if(ugo == null) {			throw new NullPointerException();		}		super.update(ugo);		cache.put(ugo.getGridId(), ugo.getUname(), ugo);	}	public void save(UserGrid ugo) {		if(ugo == null) {			throw new NullPointerException();		}		super.save(ugo);		cache.put(ugo.getGridId(), ugo.getUname(), ugo);	}		public void save(List<UserGrid> ugos) {		for(UserGrid ugo : ugos) {			save(ugo);		}	}	public void update(List<UserGrid> ugos) {		for(UserGrid ugo : ugos) {			update(ugo);		}	}	public UserGrid get(Integer grid_id, String uname) {		UserGrid ooo = cache.get(grid_id, uname);		if(ooo == null) {			ooo = super.get(grid_id, uname);			if(ooo != null) {				cache.put(grid_id, uname, ooo);			}		}		return ooo;	}		public List<UserGrid> getAll() {		if(cache.getAll().size() < getCount()) {			cache.clear();			List<UserGrid> all = super.getAll();			for (UserGrid ugo : all) {				cache.put(ugo.getGridId(), ugo.getUname(), ugo);			}		}		return cache.getAll();	}		public void clear() {		cache.clear();		super.clear();	}}