//[关卡][4]关卡地图package cn.mxz;public class MissionMapTemplet implements FighterExpPrize,MapTemplet {	/** 	 * 場景ID 	 */	private int id;	/** 	 * 場景名稱 	 */	private String name;	/** 	 * 前劇情1id 	 */	private int plotBegin1;	/** 	 * 前劇情2id 	 */	private int plotBegin2;	/** 	 * 主線BOSS劇情1id 	 */	private int plotEnd1;	/** 	 * 主線BOSS劇情2id 	 */	private int plotEnd2;	/** 	 * 支線BOSS劇情1id 	 */	private int plotEnd3;	/** 	 * 支線BOSS劇情2id 	 */	private int plotEnd4;	/** 	 * 是否新手引導 	 */	private int isNew;	/** 	 * 關卡描述（右） 	 */	private String couplet1;	/** 	 * 關卡描述（左） 	 */	private String couplet2;	/** 	 * 所屬大陸
（從0開始，0、1、2、3） 	 */	private int mainlandId;	/** 	 * 所屬章節 	 */	private int chapterId;	/** 	 * 所屬副本 	 */	private int sceneId;	/** 	 * 章節內關卡id 	 */	private int tollgateId;	/** 	 * 地圖寬度 	 */	private int width;	/** 	 * 地圖高度 	 */	private int height;	/** 	 * 每條路空點所占比例 	 */	private float ignoreScale;	/** 	 * 每條路寶箱數量所占比例 	 */	private float boxScale;	/** 	 * 每條路怪物數量所占比例 	 */	private float demonScale;	/** 	 * 每條路問號事件所占比例 	 */	private float askScale;	/** 	 * 小怪怪物id 	 */	private String monsterId;	/** 	 * 小怪主線掉落(NONE表示不掉落，GEC表示通用掉落 F表示通用掉落的範圍，數字是具體的範圍類型) 	 */	private String monsterDropOut;	/** 	 * 小怪支線掉落(NONE表示不掉落，GEC表示通用掉落 F表示通用掉落的範圍，數字是具體的範圍類型) 	 */	private String lineMonsterDropOut;	/** 	 * 怪物關卡小怪數量 	 */	private int monsterNumber;	/** 	 * 主線boss怪物id 	 */	private String bossId;	/** 	 * 主線Boss物品掉落（NONE（不掉落）：0,0：權重|道具id：最小數量，最大數量：權重|道具id：最小數量，最大數量：權重|GEC:0，0：權重） 	 */	private String bossDropOut;	/** 	 * 第一次通關主線副本必定掉落裝備 	 */	private String bossDropOutFirst;	/** 	 * 支線boss怪物id 	 */	private String lineBossId;	/** 	 * 支線Boss物品掉落（NONE（不掉落 不顯示）：0,0：權重|道具id：最小數量，最大數量：權重|道具id：最小數量，最大數量：權重|GEC（通用掉落 不顯示）:1，1：權重|ASOUL(甲魂 不顯示):1，1：權重） 	 */	private String lineBossDropOut;	/** 	 * 第一次通關支線副本必定掉落物品 	 */	private String lineBossDropOutFirst;	/** 	 * 怪物等級 	 */	private int monsterGrade;	/** 	 * 關卡進入所需豬腳等級 	 */	private int playGrade;	/** 	 * 戰鬥一次獲得銅錢 	 */	private int singleCoins;	/** 	 * 地圖資源ID（人物行走的資源） 	 */	private int pictype;	/** 	 * 地圖資源ID（人物戰鬥資源） 	 */	private int battle;	/** 	 * 關卡戰鬥力 	 */	private int fighting;	/** 	 * 主線小怪難度係數 	 */	private float wilsonParam;	/** 	 * 支線小怪難度係數 	 */	private float lineWilsonParam;	/** 	 * boss難度係數 	 */	private float bossParam;	/** 	 * 支線boss難度係數 	 */	private float lineBossParam;	/** 	 * 怪物最低傷害 	 */	private int hurtMin;	/**	 * 場景ID	 */	void setId(int id) {		this.id = id;	}	/**	 * 場景ID	 */	public int getId() {		return this.id;	}	/**	 * 場景名稱	 */	void setName(String name) {		this.name = name;	}	/**	 * 場景名稱	 */	public String getName() {		return this.name;	}	/**	 * 前劇情1id	 */	void setPlotBegin1(int plotBegin1) {		this.plotBegin1 = plotBegin1;	}	/**	 * 前劇情1id	 */	public int getPlotBegin1() {		return this.plotBegin1;	}	/**	 * 前劇情2id	 */	void setPlotBegin2(int plotBegin2) {		this.plotBegin2 = plotBegin2;	}	/**	 * 前劇情2id	 */	public int getPlotBegin2() {		return this.plotBegin2;	}	/**	 * 主線BOSS劇情1id	 */	void setPlotEnd1(int plotEnd1) {		this.plotEnd1 = plotEnd1;	}	/**	 * 主線BOSS劇情1id	 */	public int getPlotEnd1() {		return this.plotEnd1;	}	/**	 * 主線BOSS劇情2id	 */	void setPlotEnd2(int plotEnd2) {		this.plotEnd2 = plotEnd2;	}	/**	 * 主線BOSS劇情2id	 */	public int getPlotEnd2() {		return this.plotEnd2;	}	/**	 * 支線BOSS劇情1id	 */	void setPlotEnd3(int plotEnd3) {		this.plotEnd3 = plotEnd3;	}	/**	 * 支線BOSS劇情1id	 */	public int getPlotEnd3() {		return this.plotEnd3;	}	/**	 * 支線BOSS劇情2id	 */	void setPlotEnd4(int plotEnd4) {		this.plotEnd4 = plotEnd4;	}	/**	 * 支線BOSS劇情2id	 */	public int getPlotEnd4() {		return this.plotEnd4;	}	/**	 * 是否新手引導	 */	void setIsNew(int isNew) {		this.isNew = isNew;	}	/**	 * 是否新手引導	 */	public int getIsNew() {		return this.isNew;	}	/**	 * 關卡描述（右）	 */	void setCouplet1(String couplet1) {		this.couplet1 = couplet1;	}	/**	 * 關卡描述（右）	 */	public String getCouplet1() {		return this.couplet1;	}	/**	 * 關卡描述（左）	 */	void setCouplet2(String couplet2) {		this.couplet2 = couplet2;	}	/**	 * 關卡描述（左）	 */	public String getCouplet2() {		return this.couplet2;	}	/**	 * 所屬大陸
（從0開始，0、1、2、3）	 */	void setMainlandId(int mainlandId) {		this.mainlandId = mainlandId;	}	/**	 * 所屬大陸
（從0開始，0、1、2、3）	 */	public int getMainlandId() {		return this.mainlandId;	}	/**	 * 所屬章節	 */	void setChapterId(int chapterId) {		this.chapterId = chapterId;	}	/**	 * 所屬章節	 */	public int getChapterId() {		return this.chapterId;	}	/**	 * 所屬副本	 */	void setSceneId(int sceneId) {		this.sceneId = sceneId;	}	/**	 * 所屬副本	 */	public int getSceneId() {		return this.sceneId;	}	/**	 * 章節內關卡id	 */	void setTollgateId(int tollgateId) {		this.tollgateId = tollgateId;	}	/**	 * 章節內關卡id	 */	public int getTollgateId() {		return this.tollgateId;	}	/**	 * 地圖寬度	 */	void setWidth(int width) {		this.width = width;	}	/**	 * 地圖寬度	 */	public int getWidth() {		return this.width;	}	/**	 * 地圖高度	 */	void setHeight(int height) {		this.height = height;	}	/**	 * 地圖高度	 */	public int getHeight() {		return this.height;	}	/**	 * 每條路空點所占比例	 */	void setIgnoreScale(float ignoreScale) {		this.ignoreScale = ignoreScale;	}	/**	 * 每條路空點所占比例	 */	public float getIgnoreScale() {		return this.ignoreScale;	}	/**	 * 每條路寶箱數量所占比例	 */	void setBoxScale(float boxScale) {		this.boxScale = boxScale;	}	/**	 * 每條路寶箱數量所占比例	 */	public float getBoxScale() {		return this.boxScale;	}	/**	 * 每條路怪物數量所占比例	 */	void setDemonScale(float demonScale) {		this.demonScale = demonScale;	}	/**	 * 每條路怪物數量所占比例	 */	public float getDemonScale() {		return this.demonScale;	}	/**	 * 每條路問號事件所占比例	 */	void setAskScale(float askScale) {		this.askScale = askScale;	}	/**	 * 每條路問號事件所占比例	 */	public float getAskScale() {		return this.askScale;	}	/**	 * 小怪怪物id	 */	void setMonsterId(String monsterId) {		this.monsterId = monsterId;	}	/**	 * 小怪怪物id	 */	public String getMonsterId() {		return this.monsterId;	}	/**	 * 小怪主線掉落(NONE表示不掉落，GEC表示通用掉落 F表示通用掉落的範圍，數字是具體的範圍類型)	 */	void setMonsterDropOut(String monsterDropOut) {		this.monsterDropOut = monsterDropOut;	}	/**	 * 小怪主線掉落(NONE表示不掉落，GEC表示通用掉落 F表示通用掉落的範圍，數字是具體的範圍類型)	 */	public String getMonsterDropOut() {		return this.monsterDropOut;	}	/**	 * 小怪支線掉落(NONE表示不掉落，GEC表示通用掉落 F表示通用掉落的範圍，數字是具體的範圍類型)	 */	void setLineMonsterDropOut(String lineMonsterDropOut) {		this.lineMonsterDropOut = lineMonsterDropOut;	}	/**	 * 小怪支線掉落(NONE表示不掉落，GEC表示通用掉落 F表示通用掉落的範圍，數字是具體的範圍類型)	 */	public String getLineMonsterDropOut() {		return this.lineMonsterDropOut;	}	/**	 * 怪物關卡小怪數量	 */	void setMonsterNumber(int monsterNumber) {		this.monsterNumber = monsterNumber;	}	/**	 * 怪物關卡小怪數量	 */	public int getMonsterNumber() {		return this.monsterNumber;	}	/**	 * 主線boss怪物id	 */	void setBossId(String bossId) {		this.bossId = bossId;	}	/**	 * 主線boss怪物id	 */	public String getBossId() {		return this.bossId;	}	/**	 * 主線Boss物品掉落（NONE（不掉落）：0,0：權重|道具id：最小數量，最大數量：權重|道具id：最小數量，最大數量：權重|GEC:0，0：權重）	 */	void setBossDropOut(String bossDropOut) {		this.bossDropOut = bossDropOut;	}	/**	 * 主線Boss物品掉落（NONE（不掉落）：0,0：權重|道具id：最小數量，最大數量：權重|道具id：最小數量，最大數量：權重|GEC:0，0：權重）	 */	public String getBossDropOut() {		return this.bossDropOut;	}	/**	 * 第一次通關主線副本必定掉落裝備	 */	void setBossDropOutFirst(String bossDropOutFirst) {		this.bossDropOutFirst = bossDropOutFirst;	}	/**	 * 第一次通關主線副本必定掉落裝備	 */	public String getBossDropOutFirst() {		return this.bossDropOutFirst;	}	/**	 * 支線boss怪物id	 */	void setLineBossId(String lineBossId) {		this.lineBossId = lineBossId;	}	/**	 * 支線boss怪物id	 */	public String getLineBossId() {		return this.lineBossId;	}	/**	 * 支線Boss物品掉落（NONE（不掉落 不顯示）：0,0：權重|道具id：最小數量，最大數量：權重|道具id：最小數量，最大數量：權重|GEC（通用掉落 不顯示）:1，1：權重|ASOUL(甲魂 不顯示):1，1：權重）	 */	void setLineBossDropOut(String lineBossDropOut) {		this.lineBossDropOut = lineBossDropOut;	}	/**	 * 支線Boss物品掉落（NONE（不掉落 不顯示）：0,0：權重|道具id：最小數量，最大數量：權重|道具id：最小數量，最大數量：權重|GEC（通用掉落 不顯示）:1，1：權重|ASOUL(甲魂 不顯示):1，1：權重）	 */	public String getLineBossDropOut() {		return this.lineBossDropOut;	}	/**	 * 第一次通關支線副本必定掉落物品	 */	void setLineBossDropOutFirst(String lineBossDropOutFirst) {		this.lineBossDropOutFirst = lineBossDropOutFirst;	}	/**	 * 第一次通關支線副本必定掉落物品	 */	public String getLineBossDropOutFirst() {		return this.lineBossDropOutFirst;	}	/**	 * 怪物等級	 */	void setMonsterGrade(int monsterGrade) {		this.monsterGrade = monsterGrade;	}	/**	 * 怪物等級	 */	public int getMonsterGrade() {		return this.monsterGrade;	}	/**	 * 關卡進入所需豬腳等級	 */	void setPlayGrade(int playGrade) {		this.playGrade = playGrade;	}	/**	 * 關卡進入所需豬腳等級	 */	public int getPlayGrade() {		return this.playGrade;	}	/**	 * 戰鬥一次獲得銅錢	 */	void setSingleCoins(int singleCoins) {		this.singleCoins = singleCoins;	}	/**	 * 戰鬥一次獲得銅錢	 */	public int getSingleCoins() {		return this.singleCoins;	}	/**	 * 地圖資源ID（人物行走的資源）	 */	void setPictype(int pictype) {		this.pictype = pictype;	}	/**	 * 地圖資源ID（人物行走的資源）	 */	public int getPictype() {		return this.pictype;	}	/**	 * 地圖資源ID（人物戰鬥資源）	 */	void setBattle(int battle) {		this.battle = battle;	}	/**	 * 地圖資源ID（人物戰鬥資源）	 */	public int getBattle() {		return this.battle;	}	/**	 * 關卡戰鬥力	 */	void setFighting(int fighting) {		this.fighting = fighting;	}	/**	 * 關卡戰鬥力	 */	public int getFighting() {		return this.fighting;	}	/**	 * 主線小怪難度係數	 */	void setWilsonParam(float wilsonParam) {		this.wilsonParam = wilsonParam;	}	/**	 * 主線小怪難度係數	 */	public float getWilsonParam() {		return this.wilsonParam;	}	/**	 * 支線小怪難度係數	 */	void setLineWilsonParam(float lineWilsonParam) {		this.lineWilsonParam = lineWilsonParam;	}	/**	 * 支線小怪難度係數	 */	public float getLineWilsonParam() {		return this.lineWilsonParam;	}	/**	 * boss難度係數	 */	void setBossParam(float bossParam) {		this.bossParam = bossParam;	}	/**	 * boss難度係數	 */	public float getBossParam() {		return this.bossParam;	}	/**	 * 支線boss難度係數	 */	void setLineBossParam(float lineBossParam) {		this.lineBossParam = lineBossParam;	}	/**	 * 支線boss難度係數	 */	public float getLineBossParam() {		return this.lineBossParam;	}	/**	 * 怪物最低傷害	 */	void setHurtMin(int hurtMin) {		this.hurtMin = hurtMin;	}	/**	 * 怪物最低傷害	 */	public int getHurtMin() {		return this.hurtMin;	}}