package cn.mxz.handler;public interface EquipmentService extends cn.mxz.util.Service{	/**	 * 所有装备信息	 *	 * @return 所有装备信息	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentsPro getEquippedAll();	/**	 * 所有部位为part的装备信息	 *	 * @param parts 部位 用逗号分隔, 可一次性获取多个部位	 * @return 所有部位为part的装备信息	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentsPro getAllByPart(String parts);	/**	 * 所有仓库里面的装备信息, 包含已经装备的	 *	 * @return 所有仓库里面的装备信息, 包含已经装备的	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentsPro getInStorageAll();	/**	 * 更换装备	 *	 * @param id1 装备ID1	 * @param id2 装备ID2	 * @return 换到人身上的装备	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro change(int id1, int id2);	/**	 * 获取强化装备后加成	 *	 * @param id id	 * @return 获取装备强化后的加成	 */	int getLevelUpAddition(int id);	/**	 * 更换装备	 *	 * @param fighterId 装备战士ID	 * @param id1 装备ID1	 * @param id2 装备ID2	 * @return 换到人身上的装备	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro changeEquipment(int fighterId, int id1, int id2);	/**	 * 在空格子上面增加一个装备	 *	 * @param id 装备ID	 * @param fighterTypeId 战士ID	 * @return 换到人身上的装备	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro add(int id, int fighterTypeId);	/**	 * 强化装备	 *	 * @param id 装备ID1	 * @param levelAdd 强化等级	 * @return 被强化后的装备	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro levelUp(int id, int levelAdd);	/**	 * 获得某件装备合成后的属性	 *	 * @param srcEquipmentId 源装备ID	 * @return 被合成后的装备	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro getAfterGenerate(int srcEquipmentId);	/**	 * 抢夺	 *	 * @param userId 玩家ID	 * @param stuffTempletId 抢夺的材料ID	 * @return null	 */	cn.mxz.protocols.user.equipment.EquipmentP.SnatchResultPro snatch(String userId, int stuffTempletId);	/**	 * 获得随机的玩家列表	 *	 * @param stuffTempletId 抢夺的材料ID	 * @return null	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentSnatchListPro getSnatchList(int stuffTempletId);	/**	 * 获取免战倒计时	 *	 * @return 返回的是免战倒计时	 */	cn.mxz.protocols.user.equipment.EquipmentP.ProtectFighter countDownTime();	/**	 * 免战	 *	 * @return 返回的是免战倒计时	 */	cn.mxz.protocols.user.equipment.EquipmentP.ProtectFighter protect();	/**	 * 出售装备	 *	 * @param equipmentIds 装备ID 用逗号分隔	 * 	 */	void sell(String equipmentIds);	/**	 * 卸下装备	 *	 * @param fighterId 战士ID	 * @param equipmentId 装备ID	 * @return null	 */	int takeOff(int fighterId, int equipmentId);	/**	 * 夺宝日志	 *	 * @param page 日志的第几页	 * @return 被夺宝的日志信息	 */	cn.mxz.protocols.user.equipment.EquipmentP.LogSnatchPro snatchLog(int page);	/**	 * 当前拥有的装备数量	 *	 * @return 当前拥有的装备数量	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentHadPro getEquipmentHad();	/**	 * 获得夺宝战况信息	 *	 * @param situationId 战况信息ID	 * @return 获得夺宝战况信息	 */	cn.mxz.protocols.user.battle.WarSituationP.WarSituationPro getWarSituation(int situationId);	/**	 * 合成某件装备	 *	 * @param srcEquipmentId 作为材料的装备唯一ID	 * @param dstEquipmentTempletId 目标装备类型ID	 * @return 被合成后的装备	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro generate2(int srcEquipmentId, int dstEquipmentTempletId);	/**	 * 合成某件装备	 *	 * @param stuffId 材料ID	 * @return 被合成后的装备	 */	cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro generate3(int stuffId);}