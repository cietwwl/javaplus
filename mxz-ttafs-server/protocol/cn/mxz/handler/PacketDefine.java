package cn.mxz.handler;/** * ���еİ�Ŷ��� * * @author	��� * @since	2013��12��31�� 10:11:27 */public class PacketDefine {	/**	 *获得当前开启的活动类型: 0:神马也没开启, 1:Boss活动, 2:爬塔活动	 */	public static final int ActivityGetActivityType = 0;	/**	 *获得活动基本数据	 */	public static final int ActivityGetData = 1;	/**	 *当前活动开启状态: 活动ID:活动是否开启(0/1):倒计时(秒),活动ID:活动是否开启(0/1):倒计时(秒),活动ID:活动是否开启(0/1):倒计时(秒).....	 */	public static final int ActivityGetActivityStatus = 2;	/**	 *获得背包详细内容	 */	public static final int BagGetData = 10000;	/**	 *获得临时背包所有数据	 */	public static final int BagGetTempBagData = 10001;	/**	 *使用指定位置的某个道具	 */	public static final int BagUseProp = 10002;	/**	 *获得某个物品在背包中的数量	 */	public static final int BagGetCount = 10003;	/**	 *获得一堆物品在背包中的数量	 */	public static final int BagGetCounts = 10004;	/**	 *使用某个道具	 */	public static final int BagUsePropToFighter = 10005;	/**	 *获得某个物品在背包中的数量	 */	public static final int BagGetCountBySpotId = 10006;	/**	 *使用某个道具	 */	public static final int BagUsePropBySpotId = 10007;	/**	 *从临时背包将物品移动到正式背包	 */	public static final int BagMoveToBagFromTempBag = 10008;	/**	 *使用某个道具	 */	public static final int BagUseProp2 = 10009;	/**	 *获得碎片背包详细内容	 */	public static final int BagGetPiecesBag = 10010;	/**	 *使用某个道具	 */	public static final int BagBuyAndUseProp2 = 10011;	/**	 *获取某个道具今日剩余使用次数	 */	public static final int BagGetRemainUseTimes = 10012;	/**	 *获得所有背包数据, 仅仅瞿伟在 夺宝时使用	 */	public static final int BagGetBagAll = 10013;	/**	 *卖出道具	 */	public static final int BagSell = 10014;	/**	 *战斗测试	 */	public static final int BattleFightingTest = 20000;	/**	 *获取指定路径节点上的怪物信息	 */	public static final int BattleGetDemonCamp = 20001;	/**	 *模拟战斗	 */	public static final int BattleGetWelcomeFighting = 20002;	/**	 *好友列表	 */	public static final int ActivityFriendGetFriendsAll = 30000;	/**	 *获得申请详情信息	 */	public static final int ActivityFriendGetApplyMessage = 30001;	/**	 *发出去的好友申请信息	 */	public static final int ActivityFriendGetReceiveMessage = 30002;	/**	 *获得发出接收的好友信息列表	 */	public static final int ActivityFriendGetApplyRefuseMessage = 30003;	/**	 *获得查询信息	 */	public static final int ActivityFriendGetQueryMessage = 30004;	/**	 *请求添加某人为好友	 */	public static final int ActivityFriendAddRequest = 30005;	/**	 *拒绝添加某人为好友	 */	public static final int ActivityFriendRefuse = 30006;	/**	 *同意添加某人为好友	 */	public static final int ActivityFriendAccept = 30007;	/**	 *删除好友	 */	public static final int ActivityFriendRemove = 30008;	/**	 *取消发出的申请信息	 */	public static final int ActivityFriendCancel = 30009;	/**	 *好友分享给我的积分列表	 */	public static final int BossGetFriendPointsAll = 40000;	/**	 *获得Boss列表	 */	public static final int BossGetBossList = 40001;	/**	 *获得Boss列表中的Boss	 */	public static final int BossGetBoss = 40002;	/**	 *放弃当前剧情进程	 */	public static final int BossGiveUp = 40003;	/**	 *获得副本数据	 */	public static final int BossGetMissionData = 40004;	/**	 *进入某个剧情地图(点击"继续征程"按钮后,需要调用的方法)	 */	public static final int BossEnter = 40005;	/**	 *跟某个Boss战斗 可以是当前列表中的任意Boss	 */	public static final int BossHitBoss = 40006;	/**	 *走到临近的位置上去, 1.如果不是临近的, 会报错 2.移动成功扣除一点体力 3.如果移动到了终点, 显示到达终点提示, 然后清除该地图, 回到主界面 如果中途遇到了Boss, 那么直接加入到Boss列表中	 */	public static final int BossMoveTo = 40007;	/**	 *判断是否碰到了Boss	 */	public static final int BossIsTouchedBoss = 40008;	/**	 *获得当前在地图上遇到的BossId	 */	public static final int BossGetTouchedBossId = 40009;	/**	 *获得当前在地图上遇到的Boss	 */	public static final int BossGetBossTouched = 40010;	/**	 *攻击Boss之后调用该方法, 会把Boss战斗所获得的积分奖励反馈给客户端	 */	public static final int BossGetBossPrize = 40011;	/**	 *获取指定路径节点上的怪物信息	 */	public static final int BossGetDemonCamp = 40012;	/**	 *开启踩到的宝箱	 */	public static final int BossOpenChest = 40013;	/**	 *遇到?	 */	public static final int BossEncounterQuestion = 40014;	/**	 *遇到钱袋	 */	public static final int BossOpenMoney = 40015;	/**	 *领取副本战斗奖励	 */	public static final int BossReceiveMissionPrize = 40016;	/**	 *跟临近的怪兽打仗, 打赢了的话, 人就会跳到对应的位置上, 打输了的话, 人的位置不变	 */	public static final int BossFighting = 40017;	/**	 *接受好友分享的积分	 */	public static final int BossAcceptFriendShared = 40018;	/**	 *获得碰到的Boss的阵形	 */	public static final int BossGetBossCamp = 40019;	/**	 *获得我的阵形	 */	public static final int BossGetPlayerCamp = 40020;	/**	 *获得Boss列表中, 某个Boss的阵容, 前置条件, bossId必须在你能看见的Boss列表中	 */	public static final int BossGetBossCampById = 40021;	/**	 *别人发给我的Boss数量	 */	public static final int BossGetBossCountInvitedMe = 40022;	/**	 *boss战的战斗	 */	public static final int BossBattleDoBattle = 50000;	/**	 *发送消息到世界	 */	public static final int ChatSendToWorld = 60000;	/**	 *发送消息到我自己的联盟	 */	public static final int ChatSendToUnion = 60001;	/**	 *发送消息到某个人	 */	public static final int ChatSendToUser = 60002;	/**	 *通知后端打开了世界聊天	 */	public static final int ChatOpenMessage = 60003;	/**	 *闯阵	 */	public static final int ChuangZhenFighting = 70000;	/**	 *获取摇钱树界面信息	 */	public static final int CornucopiaGetData = 80000;	/**	 *摇	 */	public static final int CornucopiaRun = 80001;	/**	 *获得主界面信息	 */	public static final int CoronaGetData = 90000;	/**	 *点击运行按钮开始转转盘	 */	public static final int CoronaRun = 90001;	/**	 *刷新转盘内容	 */	public static final int CoronaRefreshCorona = 90002;	/**	 *刷新广播消息	 */	public static final int CoronaGetMessages = 90003;	/**	 *获取面板数据	 */	public static final int DajiGetData = 100000;	/**	 *驱赶	 */	public static final int DajiDrift = 100001;	/**	 *点击保护按钮	 */	public static final int DajiProtect = 100002;	/**	 *累计保护三次或者五次的时候获取奖励	 */	public static final int DajiGetProtectPrize = 100003;	/**	 *获取驱赶奖励	 */	public static final int DajiGetDriftPrize = 100004;	/**	 *获得所有神兽	 */	public static final int DogzGetDogzAll = 110000;	/**	 *获得当前出战神兽	 */	public static final int DogzGetFighting = 110001;	/**	 *顿悟(神兽品质随机增加|减少) 顿悟之后, 如果神兽处于被保护状态, 那么将会被取消保护	 */	public static final int DogzDunWu = 110002;	/**	 *保护某个神兽, 保护这个神兽之后, 在顿悟时, 就不会出现品质下降	 */	public static final int DogzProtectedDogz = 110003;	/**	 *用某种鱼喂养某个神兽, 喂养之后成长值增加	 */	public static final int DogzFeed = 110004;	/**	 *出战某个神兽, 出战后, 该神兽的加成作用就会作用到队伍	 */	public static final int DogzSetFighting = 110005;	/**	 *召回某个神兽, 召回后, 该神兽的加成作用就不会作用到队伍	 */	public static final int DogzTakeBack = 110006;	/**	 *碎片合成	 */	public static final int DogzGenerate = 110007;	/**	 *兑换某个材料	 */	public static final int DogzExchange = 110008;	/**	 *注魂	 */	public static final int DogzZhuHun = 110009;	/**	 *获得敌人列表	 */	public static final int EnemyGetEnemys = 11231;	/**	 *添加敌人	 */	public static final int EnemyAddToEnemy = 120001;	/**	 *移除敌人	 */	public static final int EnemyRemoveEnemy = 120002;	/**	 *复仇	 */	public static final int EnemyRevenge = 120003;	/**	 *攻击某个敌人	 */	public static final int EnemyAttack = 120004;	/**	 *获取系统消息	 */	public static final int EnemyGetSystemList = 120005;	/**	 *所有装备信息	 */	public static final int EquipmentGetEquippedAll = 130000;	/**	 *所有部位为part的装备信息	 */	public static final int EquipmentGetAllByPart = 130001;	/**	 *所有仓库里面的装备信息, 包含已经装备的	 */	public static final int EquipmentGetInStorageAll = 130002;	/**	 *更换装备	 */	public static final int EquipmentChange = 130003;	/**	 *获取强化装备后加成	 */	public static final int EquipmentGetLevelUpAddition = 130004;	/**	 *更换装备	 */	public static final int EquipmentChangeEquipment = 130005;	/**	 *在空格子上面增加一个装备	 */	public static final int EquipmentAdd = 130006;	/**	 *强化装备	 */	public static final int EquipmentLevelUp = 130007;	/**	 *获得某件装备合成后的属性	 */	public static final int EquipmentGetAfterGenerate = 130008;	/**	 *抢夺	 */	public static final int EquipmentSnatch = 130009;	/**	 *获得随机的玩家列表	 */	public static final int EquipmentGetSnatchList = 130010;	/**	 *获取免战倒计时	 */	public static final int EquipmentCountDownTime = 130011;	/**	 *免战	 */	public static final int EquipmentProtect = 130012;	/**	 *出售装备	 */	public static final int EquipmentSell = 130013;	/**	 *卸下装备	 */	public static final int EquipmentTakeOff = 130014;	/**	 *夺宝日志	 */	public static final int EquipmentSnatchLog = 130015;	/**	 *当前拥有的装备数量	 */	public static final int EquipmentGetEquipmentHad = 130016;	/**	 *获得夺宝战况信息	 */	public static final int EquipmentGetWarSituation = 130017;	/**	 *合成某件装备	 */	public static final int EquipmentGenerate2 = 130018;	/**	 *合成某件装备	 */	public static final int EquipmentGenerate3 = 130019;	/**	 *获得指定战士	 */	public static final int FighterGetFighter = 140000;	/**	 *如果欲获得所有战士列表, get(0, 1000000)即可 指定一个战士的下标位置, 和获取的数量, 获得某段战士列表, 比如现在玩家总共有 [A B C D E F G] 7个战士, 依次排列 则: get(0, 0) 返回 [ ] get(0, 3) 返回 [A B C ] get(5, 2) 返回 [ F G] get(6, 20) 返回 [ G] get(0, 100000) 返回 [A B C D E F G] 该方法即获得所有战士 get(1, 123323) 返回 [ B C D E F G]	 */	public static final int FighterGet = 140001;	/**	 *如果欲获得所有魂魄列表, getSpirites(0, 1000000)即可 指定一个魂魄的下标位置, 和获取的数量, 获得某段魂魄列表, 比如现在玩家总共有 [A B C D E F G] 7个魂魄, 依次排列 则: get(0, 0) 返回 [ ] get(0, 3) 返回 [A B C ] get(5, 2) 返回 [ F G] get(6, 20) 返回 [ G] get(0, 100000) 返回 [A B C D E F G] 该方法即获得所有魂魄 get(1, 123323) 返回 [ B C D E F G]	 */	public static final int FighterGetSpirites = 140002;	/**	 *招募	 */	public static final int FighterRecruit = 140003;	/**	 *用聚魂值招募	 */	public static final int FighterRecruitByJuHun = 140004;	/**	 *升星	 */	public static final int FighterLevelUpSpirite = 140005;	/**	 *可装备的技能列表 如果欲获得所有技能列表, getSkillReadys(100001, 0, 1000000)即可 指定一个技能的下标位置, 和获取的数量, 获得某段可装备的技能列表, 比如现在玩家总共有 [A B C D E F G] 7个技能, 依次排列 则: get(0, 0) 返回 [ ] get(0, 3) 返回 [A B C ] get(5, 2) 返回 [ F G] get(6, 20) 返回 [ G] get(0, 100000) 返回 [A B C D E F G] 该方法即获得所有技能 get(1, 123323) 返回 [ B C D E F G]	 */	public static final int FighterGetSkillReadys = 140006;	/**	 *更换技能	 */	public static final int FighterChangeSkill = 140007;	/**	 *卸下技能	 */	public static final int FighterTakeOffSkill = 140008;	/**	 *在空格子上面增加一个技能	 */	public static final int FighterAddSkill = 140009;	/**	 *升级技能	 */	public static final int FighterLevelUpSkill = 140010;	/**	 *获得仙市界面数据	 */	public static final int FighterGetXianShiData = 140011;	/**	 *兑换一个战士	 */	public static final int FighterExchange = 140012;	/**	 *获得指定战士 升星后的属性	 */	public static final int FighterGetFighterAfterLevelUp = 140013;	/**	 *如果欲获得所有战士列表, get(0, 1000000)即可 指定一个战士的下标位置, 和获取的数量, 获得某段战士列表, 比如现在玩家总共有 [A B C D E F G] 7个战士, 依次排列 则: get(0, 0) 返回 [ ] get(0, 3) 返回 [A B C ] get(5, 2) 返回 [ F G] get(6, 20) 返回 [ G] get(0, 100000) 返回 [A B C D E F G] 该方法即获得所有战士 get(1, 123323) 返回 [ B C D E F G]	 */	public static final int FighterGetOtherFighter = 140014;	/**	 *逗号分隔 的战士列表	 */	public static final int FighterGetFighters = 140015;	/**	 *通知服务器 点击了伙伴按钮	 */	public static final int FighterOpenFighter = 140016;	/**	 *指定魂魄的数量	 */	public static final int FighterGetSpiriteCount = 140017;	/**	 *十次寻仙	 */	public static final int FighterRecruitTenTimes = 140018;	/**	 *指定魂魄的数量	 */	public static final int FighterGetSpiriteCount2 = 140019;	/**	 *开始钓鱼	 */	public static final int FishStart = 150000;	/**	 *收杆	 */	public static final int FishStop = 150001;	/**	 *获取钓鱼数据	 */	public static final int FishGetData = 150002;	/**	 *出售	 */	public static final int FishSell = 150003;	/**	 *将消息发送给某人	 */	public static final int FriendSendMessageToSomeOne = 170000;	/**	 *好友列表	 */	public static final int FriendGetFriendsAll = 170001;	/**	 *获得申请详情信息	 */	public static final int FriendGetApplyMessage = 170002;	/**	 *发出去的好友申请信息	 */	public static final int FriendGetReceiveMessage = 170003;	/**	 *获得发出接收的好友信息列表	 */	public static final int FriendGetApplyRefuseMessage = 170004;	/**	 *获得查询信息	 */	public static final int FriendGetQueryMessage = 170005;	/**	 *请求添加某人为好友	 */	public static final int FriendAddRequest = 170006;	/**	 *拒绝添加某人为好友	 */	public static final int FriendRefuse = 170007;	/**	 *同意添加某人为好友	 */	public static final int FriendAccept = 170008;	/**	 *删除好友	 */	public static final int FriendRemove = 170009;	/**	 *取消发出的申请信息	 */	public static final int FriendCancel = 170010;	/**	 *赠送玩家count个道具	 */	public static final int FriendSendProp = 170011;	/**	 *获得可赠送的道具类型列表	 */	public static final int FriendGetGiftables = 170012;	/**	 *留言	 */	public static final int FriendLeaveAMessage = 170013;	/**	 *获得某段留言 竖线分隔各个字段: 玩家帐号|等级|昵称|是否是男人|主神将类型ID|魅力值|时间(yyyy-MM-dd HH:mm:ss)|消息内容 getId() + "|" + p.getLevel() + "|" + p.getNick() + "|" + p.isMan() + "|" + getCity().getTeam().getPlayer().getTypeId() + "|" + p.get(PlayerProperty.CHARM) + "|" + f.format(new Date()) + "|" + message );	 */	public static final int FriendGetLeaveAMessages = 170014;	/**	 *攻击好友	 */	public static final int FriendFighting = 170015;	/**	 *发送自己的坐标给服务器	 */	public static final int GPSSendLocation = 180000;	/**	 *获得附近的人的列表	 */	public static final int GPSGetLookAround = 180001;	/**	 *获得附近的人的列表	 */	public static final int GPSGetLookgirl = 180002;	/**	 *获得附近的人的列表	 */	public static final int GPSGetLookboy = 180003;	/**	 *删除自己位置	 */	public static final int GPSRemoveGPS = 180004;	/**	 *所有引导状态:例子(12100152110011: 表示总共20个引导)	 */	public static final int GuideGetStatusAll = 190000;	/**	 *标记某个引导的状态	 */	public static final int GuideMark = 190001;	/**	 *领取第一个战士	 */	public static final int GuideTakeFighter = 190002;	/**	 *神将传承	 */	public static final int InheritInherit = 200000;	/**	 *获取 to 传承后的等级	 */	public static final int InheritGetInheritLevel = 200001;	/**	 *接入游戏服务器	 */	public static final int InitAccess = 210000;	/**	 *设置角色昵称	 */	public static final int InitSetNick = 210001;	/**	 *确定创建角色	 */	public static final int InitCreate = 210002;	/**	 *设定主神将类型ID	 */	public static final int InitSetUserType = 210003;	/**	 *确定创建角色	 */	public static final int InitCreateUser = 210004;	/**	 *重置帐号	 */	public static final int InitResetUser = 210005;	/**	 *获得一个随机昵称	 */	public static final int InitGetRandomNick = 210006;	/**	 *邀请有礼界面数据	 */	public static final int InviteGetData = 220000;	/**	 *领奖	 */	public static final int InviteReceive = 220001;	/**	 *获得升级奖励信息	 */	public static final int LevelUpRewardGetData = 230000;	/**	 *领取指定等级的升级奖励	 */	public static final int LevelUpRewardReceive = 230001;	/**	 *连续登陆天数	 */	public static final int LoginRewardGetContinuousDay = 240000;	/**	 *翻开所有牌	 */	public static final int LoginRewardOpenAllCard = 240001;	/**	 *领取今日登陆元宝奖励	 */	public static final int LoginRewardReceiveGoldReward = 240002;	/**	 *清空所有日志	 */	public static final int LogsClear = 250000;	/**	 *所有日志	 */	public static final int LogsGetAll = 250001;	/**	 *删除某个日志	 */	public static final int LogsRemove = 250002;	/**	 *我的交易信息列表（"我的交易"）	 */	public static final int MarketGetMyTrade = 260000;	/**	 *提出交易	 */	public static final int MarketGetChooseFighterPro = 260001;	/**	 *查找交易信息	 */	public static final int MarketQueryTradeMes = 260002;	/**	 *接受交易	 */	public static final int MarketAcceptTrade = 260003;	/**	 *取消交易	 */	public static final int MarketCancelTrade = 260004;	/**	 *根据品阶在市场上查找信息	 */	public static final int MarketQueryToStep = 260005;	/**	 *进入某个剧情地图(点击"继续征程"按钮后,需要调用的方法)	 */	public static final int MissionEnter = 270000;	/**	 *放弃当前剧情进程	 */	public static final int MissionGiveUp = 270001;	/**	 *获得副本数据	 */	public static final int MissionGetMissionData = 270002;	/**	 *获取指定路径节点上的怪物信息	 */	public static final int MissionGetDemonCamp = 270003;	/**	 *返回到主线分叉路口	 */	public static final int MissionBackMainBranch = 270004;	/**	 *是否通过支线路口	 */	public static final int MissionBranchIsCross = 270005;	/**	 *是否通过支线路口	 */	public static final int MissionBranchCross = 270006;	/**	 *遇到?	 */	public static final int MissionEncounterQuestion = 270007;	/**	 *跟临近的怪兽打仗, 打赢了的话, 人就会跳到对应的位置上, 打输了的话, 人的位置不变	 */	public static final int MissionFighting = 270008;	/**	 *通过空节点	 */	public static final int MissionCrossEmpty = 270009;	/**	 *随机加好友	 */	public static final int MissionRandomAddFriend = 270010;	/**	 *获得副本星星数量	 */	public static final int MissionGetStarByCapterId = 270011;	/**	 *获得副本星星数量	 */	public static final int MissionGetStarBySceneId = 270012;	/**	 *获得副本星星数量	 */	public static final int MissionGetStarByMissionId = 270013;	/**	 *开启所有的宝箱	 */	public static final int MissionOpenChests = 270014;	/**	 *获得所有的宝箱ID	 */	public static final int MissionGetBoxes = 270015;	/**	 *开启踩到的宝箱	 */	public static final int MissionOpenChest = 270016;	/**	 *主角复活倒计时	 */	public static final int MissionGetRebirthSec = 270017;	/**	 *副本boss挑战	 */	public static final int MissionChallenge = 270018;	/**	 *刷新副本boss的每日挑战次数	 */	public static final int MissionRefreshChallenge = 270019;	/**	 *获取boss挑战的怪物信息	 */	public static final int MissionGetBossDemonCamp = 270020;	/**	 *获得副本星星奖励领取情况	 */	public static final int MissionGetStarReceivedStep = 270021;	/**	 *领取副本星星奖励	 */	public static final int MissionReceivedStarReward = 270022;	/**	 *复活阵上所有死亡的战士	 */	public static final int MissionRaiseAllUp = 270023;	/**	 *获得当前副本星星数量	 */	public static final int MissionGetCurrentStarByMissionId = 270024;	/**	 *重新校准玩家当前所在的位置	 */	public static final int MissionRefreshPosition = 270025;	/**	 *获取关卡的今日挑战次数信息	 */	public static final int MissionGetChallengeData = 270026;	/**	 *获得副本星星奖励领取情况	 */	public static final int MissionGetStarReceivedStep2 = 270027;	/**	 *领取副本星星奖励	 */	public static final int MissionReceivedStarReward2 = 270028;	/**	 *重置今日扫荡次数	 */	public static final int MissionResetMopingUp = 270029;	/**	 *扫荡	 */	public static final int MissionMopingUp = 270030;	/**	 *获取关卡扫荡的显示数据	 */	public static final int MissionGetMopingUpData = 270031;	/**	 *获取正在进行的关卡数据	 */	public static final int MissionGetRunningMission = 270032;	/**	 *重置扫荡的冷却时间	 */	public static final int MissionResetMopingUpColdTime = 270033;	/**	 *如果此关卡玩家仅仅通了 主线，支线未通过，则允许玩家直接跳到分叉点上, 此时当前关卡必须不为空	 */	public static final int MissionDirectJumpBranch = 270034;	/**	 *获取输入关卡boss的战斗情况	 */	public static final int MissionGetCrossSituation = 270035;	/**	 *获得主界面信息	 */	public static final int NewFormationGetData = 280000;	/**	 *查看其它玩家信息	 */	public static final int NewFormationLookUpOther = 280001;	/**	 *阵法升级	 */	public static final int NewFormationTacticalUp = 280002;	/**	 *选择阵法	 */	public static final int NewFormationSetCurrentTacticalId = 280003;	/**	 *刷新替补位	 */	public static final int NewFormationRefreshBackupPos = 280004;	/**	 *设置英雄的位置	 */	public static final int NewFormationChange = 280005;	/**	 *设置英雄的位置	 */	public static final int NewFormationMove = 280006;	/**	 *合成阵法	 */	public static final int NewFormationCompound = 280007;	/**	 *获取通知模块所有信息	 */	public static final int NoticeGetData = 290000;	/**	 *关注好友	 */	public static final int PracticeCareFor = 300000;	/**	 *求关注	 */	public static final int PracticeAskForCare = 300001;	/**	 *获得求关注列表	 */	public static final int PracticeGetAskForCareList = 300002;	/**	 *获得双休的战斗属性加成	 */	public static final int PracticeGetAddition = 300003;	/**	 *删除玩家求关注信息	 */	public static final int PracticeRemoveCareData = 300004;	/**	 *获得我的修练场信息	 */	public static final int PracticeGetData = 300005;	/**	 *获得双休日志	 */	public static final int PracticeGetLog = 300006;	/**	 *查看别人的修练场信息	 */	public static final int PracticeLookUpOther = 300007;	/**	 *获得双休邀请列表	 */	public static final int PracticeGetRequest = 300008;	/**	 *邀请和别人双修	 */	public static final int PracticeRequest = 300009;	/**	 *同意和别人双休	 */	public static final int PracticeAccept = 300010;	/**	 *拒绝和别人双修	 */	public static final int PracticeRefuse = 300011;	/**	 *获得双休好友列表	 */	public static final int PracticeGetFriends = 300012;	/**	 *结束和别人双休	 */	public static final int PracticeStopPracticeWithOther = 300013;	/**	 *亲密示爱	 */	public static final int PracticeQmsa = 300014;	/**	 *百年好合	 */	public static final int PracticeBnhh = 300015;	/**	 *比翼双飞	 */	public static final int PracticeBysf = 300016;	/**	 *设置是否自动接受双休	 */	public static final int PracticeSetAutoAccept = 300017;	/**	 *设置为出战阵容(选定某个阵形为默认阵形)	 */	public static final int PVPFormationSelectPVP = 310000;	/**	 *拖动某个人从某个位置拖动到另外一个位置, 1.如果positionSrc位置没有人, throw new IllOperationException("指定位置没有人") 2.如果2个位置都有人, 交换两个人的位置	 */	public static final int PVPFormationMovePVP = 310001;	/**	 *往指定点添加战士	 */	public static final int PVPFormationAddFighterPVP = 310002;	/**	 *移除指定位置的战士	 */	public static final int PVPFormationRemoveFighterPVP = 310003;	/**	 *获得我的PVP信息	 */	public static final int PvpGetMyData = 320000;	/**	 *获得我的PVP信息	 */	public static final int PvpGetOther = 320001;	/**	 *随机3个人出来给我打	 */	public static final int PvpGetRandomUser = 320002;	/**	 *第几页	 */	public static final int PvpGetTops = 320003;	/**	 *Pvp奖励信息	 */	public static final int PvpGetReward = 320004;	/**	 *领取Pvp奖励	 */	public static final int PvpReceiveReward = 320005;	/**	 *购买挑战机会(1个机会=5次)	 */	public static final int PvpBuyTimes = 320006;	/**	 *获取最近战报信息	 */	public static final int PvpGetWarsituations = 320007;	/**	 *膜拜	 */	public static final int PvpKowtow = 320008;	/**	 *挑战某人	 */	public static final int PvpFighting = 320009;	/**	 *获得我所在的页面的信息	 */	public static final int PvpGetUsersNearMe = 320010;	/**	 *第几页	 */	public static final int PvpGetTops2 = 320011;	/**	 *领取任务奖励	 */	public static final int PvpRecieveReward = 320012;	/**	 *获取PVP任务奖励信息	 */	public static final int PvpGetTaskReward = 320013;	/**	 *领取奖励	 */	public static final int PvpRecieveRankReward = 320014;	/**	 *购买挑战机会(1个机会=5次)	 */	public static final int PvpBuyFuWen = 320015;	/**	 *购买挑战机会(1个机会=5次)	 */	public static final int PvpUseFuWen = 320016;	/**	 *Pvp夺宝战报	 */	public static final int PvpGetWarSituation = 320017;	/**	 *今日前十名, 这个排名明日00:00才会更新	 */	public static final int PvpGetTopsToday = 320018;	/**	 *获取最近战报信息	 */	public static final int PvpGetWarsituationsCs = 320019;	/**	 *领取当前的段位奖励	 */	public static final int PvpReceiveDanReward = 320020;	/**	 *领取奖励	 */	public static final int PvpRecieveRankReward2 = 320021;	/**	 *领取当前的段位奖励	 */	public static final int PvpReceiveDanReward2 = 320022;	/**	 *竞技场奖励	 */	public static final int PvpGetRewardStatus = 320023;	/**	 *清空刷新冷却时间	 */	public static final int PvpClearRefreshCd = 320024;	/**	 *随机3个人出来给我打	 */	public static final int PvpGetRandomUser2 = 320025;	/**	 *获得所有按钮的内容	 */	public static final int QiYuGetButtons = 330000;	/**	 *获得主界面信息	 */	public static final int RechargeFeedbackGetData = 340000;	/**	 *领取充值回馈	 */	public static final int RechargeFeedbackGetPrize = 340001;	/**	 *充值排行榜前十名	 */	public static final int RechargeFeedbackGetTop10 = 340002;	/**	 *签到	 */	public static final int RegisterRegist = 350000;	/**	 *补签	 */	public static final int RegisterRemedy = 350001;	/**	 *获得签到日历数据	 */	public static final int RegisterGetData = 350002;	/**	 *兑换某个材料	 */	public static final int ShenMoExchange = 360000;	/**	 *神魔战斗	 */	public static final int ShenMoFight = 360001;	/**	 *我的神魔信息	 */	public static final int ShenMoGetMyData = 360002;	/**	 *神魔领奖	 */	public static final int ShenMoGetPrize = 360003;	/**	 *功德领奖	 */	public static final int ShenMoGetGongdePrize = 360004;	/**	 *获取自己发现的最新神魔的信息	 */	public static final int ShenMoGetNewShenmo = 360005;	/**	 *获取商城信息	 */	public static final int ShopGetData = 370000;	/**	 *获取商品信息	 */	public static final int ShopGetShopTools = 370001;	/**	 *购买商品道具	 */	public static final int ShopBuyTool = 370002;	/**	 *商品的价格	 */	public static final int ShopGetPrice = 370003;	/**	 *合成某个技能	 */	public static final int SkillGenerate = 380000;	/**	 *获得某个技能加成信息	 */	public static final int SkillGetAddition = 380001;	/**	 *充值测试接口, 调试模式才起效	 */	public static final int SystemRecharge = 390000;	/**	 *获取首次充值大礼包	 */	public static final int SystemGetRechargeAward = 390001;	/**	 *获取首次充值大礼包	 */	public static final int SystemBeatToServer = 390002;	/**	 *每日任务	 */	public static final int TaskGetDailyTask = 400000;	/**	 *成就任务	 */	public static final int TaskGetAchieveTask = 400001;	/**	 *领取成就任务奖励	 */	public static final int TaskReceiveAchieveTaskPrize = 400002;	/**	 *领取日常任务奖励	 */	public static final int TaskReceiveDailyTaskPrize = 400003;	/**	 *领取成就任务章节奖励	 */	public static final int TaskReceiveAchieveTaskChapterPrize = 400004;	/**	 *章节任务奖励领取状态 比如: 1,0,1,0,1,0	 */	public static final int TaskGetAchieveTaskChapterPrizeStatus = 400005;	/**	 *领取日常任务 宝箱奖励	 */	public static final int TaskReceiveDailyTaskBoxReward = 400006;	/**	 *获得当前上香状态	 */	public static final int UserShangxiangGetSX = 420000;	/**	 *上香	 */	public static final int UserShangxiangSendSX = 420001;	/**	 *获取用户数据	 */	public static final int UserGetData = 430000;	/**	 *获得用户战斗力	 */	public static final int UserGetFightingCapacity = 430001;	/**	 *玩家升级数据	 */	public static final int UserGetUserLevelUpData = 430002;	/**	 *获得主界面信息	 */	public static final int VipCardGetData = 440000;	/**	 *点击运行按钮开始转转盘	 */	public static final int VipCardBuy = 440001;	/**	 *获得礼包购买情况	 */	public static final int VipGetData = 450000;	/**	 *点击运行按钮开始转转盘	 */	public static final int VipBuy = 450001;	/**	 *获得所有的可以领取的礼包	 */	public static final int XianShiGetPresents = 460000;	/**	 *领取所有的礼包	 */	public static final int XianShiBuyPresent = 460001;	/**	 *升级某个元神	 */	public static final int YuanShenLevelUp = 470000;	/**	 *重置某个元神	 */	public static final int YuanShenReset = 470001;	/**	 *获得主界面信息	 */	public static final int YunyouGetData = 480000;	/**	 *通过唯一id获取一个云游仙人的信息	 */	public static final int YunyouGetById = 480001;	/**	 *限时抢购	 */	public static final int YunyouBuy = 480002;	/**	 *指点结束，获取经验	 */	public static final int YunyouGetExp = 480003;	/**	 *指点结束，强制获取双倍经验,如果需要的道具“酒”不足则直接购买	 */	public static final int YunyouGetExpForceDouble = 480004;	/**	 *获得主界面信息	 */	public static final int ZanGetData = 490000;	/**	 *点赞	 */	public static final int ZanClickZan = 490001;	/**	 *获取界面信息	 */	public static final int FirstRechargePerDayGetDate = 500000;	/**	 *仅仅返回是否领取每日奖励	 */	public static final int FirstRechargePerDayGetDate1 = 500001;	/**	 *获取每日充值奖励	 */	public static final int FirstRechargePerDayGetAward = 500002;	/**	 *黑市界面数据	 */	public static final int HeishiGetData = 510000;	/**	 *黑市兑换	 */	public static final int HeishiExchange = 510001;	/**	 *获取界面信息	 */	public static final int MonthCardGetDate = 520000;	/**	 *购买月卡	 */	public static final int MonthCardBuy = 520001;}