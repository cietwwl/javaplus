package cn.mxz.handler;public interface FriendService extends cn.mxz.util.Service{	/**	 * 将消息发送给某人	 *	 * @param userId 某人	 * @param message 消息内容	 * 	 */	void sendMessageToSomeOne(String userId, String message);	/**	 * 好友列表	 *	 * @param page 第几页的好友列表	 * @return 好友列表	 */	cn.mxz.protocols.user.friend.FirendListP.FriendsAllListPro getFriendsAll(int page);	/**	 * 获得申请详情信息	 *	 * @param page 第几页的申请信息	 * @return 申请信息列表	 */	cn.mxz.protocols.user.friend.FriendAppayMessageListP.ApplyListPro getApplyMessage(int page);	/**	 * 发出去的好友申请信息	 *	 * @param page 第几页的信息	 * @return 发出去申请信息列表	 */	cn.mxz.protocols.user.friend.FirendListP.FriendReceiveListPro getReceiveMessage(int page);	/**	 * 获得发出接收的好友信息列表	 *	 * @param page 第几页的信息	 * @return 发出接收的好友列表	 */	cn.mxz.protocols.user.friend.FirendListP.FriendSendAndReceiveListPro getApplyRefuseMessage(int page);	/**	 * 获得查询信息	 *	 * @param userMes 通过玩家账号查询或等级	 * @param page 第几页的查询信息	 * @return 查询信息列表	 */	cn.mxz.protocols.user.friend.QueryFriendAppayP.QueryListPro getQueryMessage(String userMes, int page);	/**	 * 请求添加某人为好友	 *	 * @param userId 所要添加的玩家账号	 * 	 */	void addRequest(String userId);	/**	 * 拒绝添加某人为好友	 *	 * @param userId 所要删除的玩家账号（拒绝）	 * 	 */	void refuse(String userId);	/**	 * 同意添加某人为好友	 *	 * @param userId 所要删除的玩家账号（同意）	 * 	 */	void accept(String userId);	/**	 * 删除好友	 *	 * @param friendId 所要删除的玩家账号（删除）	 * 	 */	void remove(String friendId);	/**	 * 取消发出的申请信息	 *	 * @param friendId 所要删除的玩家账号（删除）	 * 	 */	void cancel(String friendId);	/**	 * 赠送玩家count个道具	 *	 * @param friendId 被赠送的玩家的ID	 * @param propId1 赠送的道具类型	 * @param count1 赠送数量	 * @param propId2 赠送的道具类型 没有传-1	 * @param count2 赠送数量	 * @param propId3 赠送的道具类型 没有传-1	 * @param count3 赠送数量	 * 	 */	void sendProp(String friendId, int propId1, int count1, int propId2, int count2, int propId3, int count3);	/**	 * 获得可赠送的道具类型列表	 *	 * @return 可赠送的道具类型列表	 */	cn.mxz.protocols.user.friend.PropsGiftableP.PropsGiftablePro getGiftables();	/**	 * 留言	 *	 * @param user_id 玩家ID	 * @param message message	 * 	 */	void leaveAMessage(String user_id, String message);	/**	 * 获得某段留言 竖线分隔各个字段: 玩家帐号|等级|昵称|是否是男人|主神将类型ID|魅力值|时间(yyyy-MM-dd HH:mm:ss)|消息内容 getId() + "|" + p.getLevel() + "|" + p.getNick() + "|" + p.isMan() + "|" + getCity().getTeam().getPlayer().getTypeId() + "|" + p.get(PlayerProperty.CHARM) + "|" + f.format(new Date()) + "|" + message );	 *	 * @param index 起始位置	 * @param count 记录数量	 * @return null	 */	cn.mxz.protocols.user.log.LogsP.LogsPro getLeaveAMessages(int index, int count);	/**	 * 攻击好友	 *	 * @param userId 玩家帐号	 * @return null	 */	cn.mxz.protocols.user.friend.FriendAppayMessageListP.FriendWarSituationPro fighting(String userId);}