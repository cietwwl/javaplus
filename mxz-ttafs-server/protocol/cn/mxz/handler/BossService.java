package cn.mxz.handler;public interface BossService extends cn.mxz.util.Service{	/**	 * 好友分享给我的积分列表	 *	 * @return 好友分享给我的积分列表	 */	cn.mxz.protocols.user.boss.BossP.FriendPointPro getFriendPointsAll();	/**	 * 获得Boss列表	 *	 * @return Boss列表	 */	cn.mxz.protocols.user.boss.BossP.BossListPro getBossList();	/**	 * 获得Boss列表中的Boss	 *	 * @param bossId Boss唯一ID, 这个id可以在BossListPro里面的某个元素里面取得	 * @return Boss列表中的Boss	 */	cn.mxz.protocols.user.boss.BossP.BossPro getBoss(int bossId);	/**	 * 放弃当前剧情进程	 *	 * 	 */	void giveUp();	/**	 * 获得副本数据	 *	 * @return 副本数据	 */	cn.mxz.protocols.user.mission.MissionP.MissionPro getMissionData();	/**	 * 进入某个剧情地图(点击"继续征程"按钮后,需要调用的方法)	 *	 * @param storyId 剧情ID	 * 	 */	void enter(int storyId);	/**	 * 跟某个Boss战斗 可以是当前列表中的任意Boss	 *	 * @param bossId Boss唯一ID, 这个id可以在BossListPro里面的某个元素里面取得	 * @param isFull 是否全力战斗	 * @return 奖励信息	 */	cn.mxz.protocols.user.battle.WarSituationP.WarSituationPro hitBoss(int bossId, Boolean isFull);	/**	 * 走到临近的位置上去, 1.如果不是临近的, 会报错 2.移动成功扣除一点体力 3.如果移动到了终点, 显示到达终点提示, 然后清除该地图, 回到主界面 如果中途遇到了Boss, 那么直接加入到Boss列表中	 *	 * @param path 临近节点的路径	 * @param index 临近节点在路径中的索引位置	 * @return 是否遇到了Boss	 */	int moveTo(int path, int index);	/**	 * 判断是否碰到了Boss	 *	 * @return 判断是否碰到了Boss	 */	Boolean isTouchedBoss();	/**	 * 获得当前在地图上遇到的BossId	 *	 * @return 当前在地图上遇到的BossId	 */	int getTouchedBossId();	/**	 * 获得当前在地图上遇到的Boss	 *	 * @return 当前在地图上遇到的Boss	 */	cn.mxz.protocols.user.boss.BossP.BossPro getBossTouched();	/**	 * 攻击Boss之后调用该方法, 会把Boss战斗所获得的积分奖励反馈给客户端	 *	 * @return 积分奖励	 */	cn.mxz.protocols.user.boss.BossP.RewardPanelPro getBossPrize();	/**	 * 获取指定路径节点上的怪物信息	 *	 * @param path 临近节点的路径	 * @param index 临近节点在路径中的索引位置	 * @return 指定路径节点上的怪物信息	 */	cn.mxz.protocols.user.battle.WarSituationP.CampPro getDemonCamp(int path, int index);	/**	 * 开启踩到的宝箱	 *	 * @return null	 */	cn.mxz.protocols.user.mission.BoxP.BoxPro openChest();	/**	 * 遇到?	 *	 * @return null	 */	cn.mxz.protocols.user.mission.RandomMessageP.RandomMessagePro encounterQuestion();	/**	 * 遇到钱袋	 *	 * @return null	 */	cn.mxz.protocols.user.mission.MoneyMessageP.MoneyMessagePro openMoney();	/**	 * 领取副本战斗奖励	 *	 * @return 领取副本战斗奖励	 */	cn.mxz.protocols.user.mission.MissionP.MissionPrizePro receiveMissionPrize();	/**	 * 跟临近的怪兽打仗, 打赢了的话, 人就会跳到对应的位置上, 打输了的话, 人的位置不变	 *	 * @param path 临近节点的路径	 * @param index 临近节点在路径中的索引位置	 * @return null	 */	cn.mxz.protocols.user.battle.WarSituationP.WarSituationPro fighting(int path, int index);	/**	 * 接受好友分享的积分	 *	 * 	 */	void acceptFriendShared();	/**	 * 获得碰到的Boss的阵形	 *	 * @return 碰到的Boss的阵形	 */	cn.mxz.protocols.user.battle.WarSituationP.CampPro getBossCamp();	/**	 * 获得我的阵形	 *	 * @param isFullFighting 是否全力一击	 * @return 获得我的阵形	 */	cn.mxz.protocols.user.battle.WarSituationP.CampPro getPlayerCamp(Boolean isFullFighting);	/**	 * 获得Boss列表中, 某个Boss的阵容, 前置条件, bossId必须在你能看见的Boss列表中	 *	 * @param bossId BossID	 * @return null	 */	cn.mxz.protocols.user.battle.WarSituationP.CampPro getBossCampById(int bossId);	/**	 * 别人发给我的Boss数量	 *	 * @return null	 */	int getBossCountInvitedMe();}