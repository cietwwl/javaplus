package cn.mxz.handler;public interface ActivityFriendService extends cn.mxz.util.Service{	/**	 * 好友列表	 *	 * @param page 第几页的好友列表	 * @return 好友列表	 */	cn.mxz.protocols.user.friend.FirendListP.FriendsAllListPro getFriendsAll(int page);	/**	 * 获得申请详情信息	 *	 * @param page 第几页的申请信息	 * @return 申请信息列表	 */	cn.mxz.protocols.user.friend.FriendAppayMessageListP.ApplyListPro getApplyMessage(int page);	/**	 * 发出去的好友申请信息	 *	 * @param page 第几页的信息	 * @return 发出去申请信息列表	 */	cn.mxz.protocols.user.friend.FirendListP.FriendReceiveListPro getReceiveMessage(int page);	/**	 * 获得发出接收的好友信息列表	 *	 * @param page 第几页的信息	 * @return 发出接收的好友列表	 */	cn.mxz.protocols.user.friend.FirendListP.FriendSendAndReceiveListPro getApplyRefuseMessage(int page);	/**	 * 获得查询信息	 *	 * @param userMes 通过玩家账号查询或等级	 * @param page 第几页的查询信息	 * @return 查询信息列表	 */	cn.mxz.protocols.user.friend.QueryFriendAppayP.QueryListPro getQueryMessage(String userMes, int page);	/**	 * 请求添加某人为好友	 *	 * @param userId 所要添加的玩家账号	 * 	 */	void addRequest(String userId);	/**	 * 拒绝添加某人为好友	 *	 * @param userId 所要删除的玩家账号（拒绝）	 * 	 */	void refuse(String userId);	/**	 * 同意添加某人为好友	 *	 * @param userId 所要删除的玩家账号（同意）	 * 	 */	void accept(String userId);	/**	 * 删除好友	 *	 * @param friendId 所要删除的玩家账号（删除）	 * 	 */	void remove(String friendId);	/**	 * 取消发出的申请信息	 *	 * @param friendId 所要删除的玩家账号（删除）	 * 	 */	void cancel(String friendId);}