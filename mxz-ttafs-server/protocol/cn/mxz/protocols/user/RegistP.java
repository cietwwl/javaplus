// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regist.p

package cn.mxz.protocols.user;

public final class RegistP {
  private RegistP() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CalendarProOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 start = 10;
    boolean hasStart();
    int getStart();
    
    // required int32 day = 11;
    boolean hasDay();
    int getDay();
    
    // required int32 month = 12;
    boolean hasMonth();
    int getMonth();
    
    // repeated .cn.mxz.protocols.user.RegistRecordPro records = 20;
    java.util.List<cn.mxz.protocols.user.RegistP.RegistRecordPro> 
        getRecordsList();
    cn.mxz.protocols.user.RegistP.RegistRecordPro getRecords(int index);
    int getRecordsCount();
    java.util.List<? extends cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder> 
        getRecordsOrBuilderList();
    cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder getRecordsOrBuilder(
        int index);
  }
  public static final class CalendarPro extends
      com.google.protobuf.GeneratedMessage
      implements CalendarProOrBuilder {
    // Use CalendarPro.newBuilder() to construct.
    private CalendarPro(Builder builder) {
      super(builder);
    }
    private CalendarPro(boolean noInit) {}
    
    private static final CalendarPro defaultInstance;
    public static CalendarPro getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public CalendarPro getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_CalendarPro_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_CalendarPro_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 start = 10;
    public static final int START_FIELD_NUMBER = 10;
    private int start_;
    @Override
	public boolean hasStart() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    @Override
	public int getStart() {
      return start_;
    }
    
    // required int32 day = 11;
    public static final int DAY_FIELD_NUMBER = 11;
    private int day_;
    @Override
	public boolean hasDay() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    @Override
	public int getDay() {
      return day_;
    }
    
    // required int32 month = 12;
    public static final int MONTH_FIELD_NUMBER = 12;
    private int month_;
    @Override
	public boolean hasMonth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    @Override
	public int getMonth() {
      return month_;
    }
    
    // repeated .cn.mxz.protocols.user.RegistRecordPro records = 20;
    public static final int RECORDS_FIELD_NUMBER = 20;
    private java.util.List<cn.mxz.protocols.user.RegistP.RegistRecordPro> records_;
    @Override
	public java.util.List<cn.mxz.protocols.user.RegistP.RegistRecordPro> getRecordsList() {
      return records_;
    }
    @Override
	public java.util.List<? extends cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder> 
        getRecordsOrBuilderList() {
      return records_;
    }
    @Override
	public int getRecordsCount() {
      return records_.size();
    }
    @Override
	public cn.mxz.protocols.user.RegistP.RegistRecordPro getRecords(int index) {
      return records_.get(index);
    }
    @Override
	public cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder getRecordsOrBuilder(
        int index) {
      return records_.get(index);
    }
    
    private void initFields() {
      start_ = 0;
      day_ = 0;
      month_ = 0;
      records_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStart()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMonth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRecordsCount(); i++) {
        if (!getRecords(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(10, start_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(11, day_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(12, month_);
      }
      for (int i = 0; i < records_.size(); i++) {
        output.writeMessage(20, records_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, start_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, day_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, month_);
      }
      for (int i = 0; i < records_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, records_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.CalendarPro parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.mxz.protocols.user.RegistP.CalendarPro prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cn.mxz.protocols.user.RegistP.CalendarProOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_CalendarPro_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_CalendarPro_fieldAccessorTable;
      }
      
      // Construct using cn.mxz.protocols.user.RegistP.CalendarPro.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRecordsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      @Override
	public Builder clear() {
        super.clear();
        start_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        day_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        month_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.mxz.protocols.user.RegistP.CalendarPro.getDescriptor();
      }
      
      @Override
	public cn.mxz.protocols.user.RegistP.CalendarPro getDefaultInstanceForType() {
        return cn.mxz.protocols.user.RegistP.CalendarPro.getDefaultInstance();
      }
      
      @Override
	public cn.mxz.protocols.user.RegistP.CalendarPro build() {
        cn.mxz.protocols.user.RegistP.CalendarPro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cn.mxz.protocols.user.RegistP.CalendarPro buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cn.mxz.protocols.user.RegistP.CalendarPro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      @Override
	public cn.mxz.protocols.user.RegistP.CalendarPro buildPartial() {
        cn.mxz.protocols.user.RegistP.CalendarPro result = new cn.mxz.protocols.user.RegistP.CalendarPro(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.start_ = start_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.day_ = day_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.month_ = month_;
        if (recordsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            records_ = java.util.Collections.unmodifiableList(records_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.records_ = records_;
        } else {
          result.records_ = recordsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.mxz.protocols.user.RegistP.CalendarPro) {
          return mergeFrom((cn.mxz.protocols.user.RegistP.CalendarPro)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cn.mxz.protocols.user.RegistP.CalendarPro other) {
        if (other == cn.mxz.protocols.user.RegistP.CalendarPro.getDefaultInstance()) return this;
        if (other.hasStart()) {
          setStart(other.getStart());
        }
        if (other.hasDay()) {
          setDay(other.getDay());
        }
        if (other.hasMonth()) {
          setMonth(other.getMonth());
        }
        if (recordsBuilder_ == null) {
          if (!other.records_.isEmpty()) {
            if (records_.isEmpty()) {
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRecordsIsMutable();
              records_.addAll(other.records_);
            }
            onChanged();
          }
        } else {
          if (!other.records_.isEmpty()) {
            if (recordsBuilder_.isEmpty()) {
              recordsBuilder_.dispose();
              recordsBuilder_ = null;
              records_ = other.records_;
              bitField0_ = (bitField0_ & ~0x00000008);
              recordsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecordsFieldBuilder() : null;
            } else {
              recordsBuilder_.addAllMessages(other.records_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public final boolean isInitialized() {
        if (!hasStart()) {
          
          return false;
        }
        if (!hasDay()) {
          
          return false;
        }
        if (!hasMonth()) {
          
          return false;
        }
        for (int i = 0; i < getRecordsCount(); i++) {
          if (!getRecords(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000001;
              start_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000002;
              day_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000004;
              month_ = input.readInt32();
              break;
            }
            case 162: {
              cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder subBuilder = cn.mxz.protocols.user.RegistP.RegistRecordPro.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRecords(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 start = 10;
      private int start_ ;
      @Override
	public boolean hasStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
	public int getStart() {
        return start_;
      }
      public Builder setStart(int value) {
        bitField0_ |= 0x00000001;
        start_ = value;
        onChanged();
        return this;
      }
      public Builder clearStart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        start_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 day = 11;
      private int day_ ;
      @Override
	public boolean hasDay() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
	public int getDay() {
        return day_;
      }
      public Builder setDay(int value) {
        bitField0_ |= 0x00000002;
        day_ = value;
        onChanged();
        return this;
      }
      public Builder clearDay() {
        bitField0_ = (bitField0_ & ~0x00000002);
        day_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 month = 12;
      private int month_ ;
      @Override
	public boolean hasMonth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      @Override
	public int getMonth() {
        return month_;
      }
      public Builder setMonth(int value) {
        bitField0_ |= 0x00000004;
        month_ = value;
        onChanged();
        return this;
      }
      public Builder clearMonth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        month_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .cn.mxz.protocols.user.RegistRecordPro records = 20;
      private java.util.List<cn.mxz.protocols.user.RegistP.RegistRecordPro> records_ =
        java.util.Collections.emptyList();
      private void ensureRecordsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          records_ = new java.util.ArrayList<cn.mxz.protocols.user.RegistP.RegistRecordPro>(records_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.mxz.protocols.user.RegistP.RegistRecordPro, cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder, cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder> recordsBuilder_;
      
      @Override
	public java.util.List<cn.mxz.protocols.user.RegistP.RegistRecordPro> getRecordsList() {
        if (recordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(records_);
        } else {
          return recordsBuilder_.getMessageList();
        }
      }
      @Override
	public int getRecordsCount() {
        if (recordsBuilder_ == null) {
          return records_.size();
        } else {
          return recordsBuilder_.getCount();
        }
      }
      @Override
	public cn.mxz.protocols.user.RegistP.RegistRecordPro getRecords(int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);
        } else {
          return recordsBuilder_.getMessage(index);
        }
      }
      public Builder setRecords(
          int index, cn.mxz.protocols.user.RegistP.RegistRecordPro value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.set(index, value);
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRecords(
          int index, cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRecords(cn.mxz.protocols.user.RegistP.RegistRecordPro value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRecords(
          int index, cn.mxz.protocols.user.RegistP.RegistRecordPro value) {
        if (recordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordsIsMutable();
          records_.add(index, value);
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRecords(
          cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRecords(
          int index, cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder builderForValue) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRecords(
          java.lang.Iterable<? extends cn.mxz.protocols.user.RegistP.RegistRecordPro> values) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          super.addAll(values, records_);
          onChanged();
        } else {
          recordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRecords() {
        if (recordsBuilder_ == null) {
          records_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          recordsBuilder_.clear();
        }
        return this;
      }
      public Builder removeRecords(int index) {
        if (recordsBuilder_ == null) {
          ensureRecordsIsMutable();
          records_.remove(index);
          onChanged();
        } else {
          recordsBuilder_.remove(index);
        }
        return this;
      }
      public cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder getRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().getBuilder(index);
      }
      @Override
	public cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder getRecordsOrBuilder(
          int index) {
        if (recordsBuilder_ == null) {
          return records_.get(index);  } else {
          return recordsBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
	public java.util.List<? extends cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder> 
           getRecordsOrBuilderList() {
        if (recordsBuilder_ != null) {
          return recordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(records_);
        }
      }
      public cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder addRecordsBuilder() {
        return getRecordsFieldBuilder().addBuilder(
            cn.mxz.protocols.user.RegistP.RegistRecordPro.getDefaultInstance());
      }
      public cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder addRecordsBuilder(
          int index) {
        return getRecordsFieldBuilder().addBuilder(
            index, cn.mxz.protocols.user.RegistP.RegistRecordPro.getDefaultInstance());
      }
      public java.util.List<cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder> 
           getRecordsBuilderList() {
        return getRecordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.mxz.protocols.user.RegistP.RegistRecordPro, cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder, cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder> 
          getRecordsFieldBuilder() {
        if (recordsBuilder_ == null) {
          recordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.mxz.protocols.user.RegistP.RegistRecordPro, cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder, cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder>(
                  records_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          records_ = null;
        }
        return recordsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cn.mxz.protocols.user.CalendarPro)
    }
    
    static {
      defaultInstance = new CalendarPro(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cn.mxz.protocols.user.CalendarPro)
  }
  
  public interface RegistRecordProOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 type = 10;
    boolean hasType();
    int getType();
    
    // optional int32 rewardId = 20;
    boolean hasRewardId();
    int getRewardId();
  }
  public static final class RegistRecordPro extends
      com.google.protobuf.GeneratedMessage
      implements RegistRecordProOrBuilder {
    // Use RegistRecordPro.newBuilder() to construct.
    private RegistRecordPro(Builder builder) {
      super(builder);
    }
    private RegistRecordPro(boolean noInit) {}
    
    private static final RegistRecordPro defaultInstance;
    public static RegistRecordPro getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public RegistRecordPro getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_RegistRecordPro_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_RegistRecordPro_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 type = 10;
    public static final int TYPE_FIELD_NUMBER = 10;
    private int type_;
    @Override
	public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    @Override
	public int getType() {
      return type_;
    }
    
    // optional int32 rewardId = 20;
    public static final int REWARDID_FIELD_NUMBER = 20;
    private int rewardId_;
    @Override
	public boolean hasRewardId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    @Override
	public int getRewardId() {
      return rewardId_;
    }
    
    private void initFields() {
      type_ = 0;
      rewardId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(10, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(20, rewardId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, rewardId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.RegistP.RegistRecordPro parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.mxz.protocols.user.RegistP.RegistRecordPro prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cn.mxz.protocols.user.RegistP.RegistRecordProOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_RegistRecordPro_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.mxz.protocols.user.RegistP.internal_static_cn_mxz_protocols_user_RegistRecordPro_fieldAccessorTable;
      }
      
      // Construct using cn.mxz.protocols.user.RegistP.RegistRecordPro.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      @Override
	public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rewardId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.mxz.protocols.user.RegistP.RegistRecordPro.getDescriptor();
      }
      
      @Override
	public cn.mxz.protocols.user.RegistP.RegistRecordPro getDefaultInstanceForType() {
        return cn.mxz.protocols.user.RegistP.RegistRecordPro.getDefaultInstance();
      }
      
      @Override
	public cn.mxz.protocols.user.RegistP.RegistRecordPro build() {
        cn.mxz.protocols.user.RegistP.RegistRecordPro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cn.mxz.protocols.user.RegistP.RegistRecordPro buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cn.mxz.protocols.user.RegistP.RegistRecordPro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      @Override
	public cn.mxz.protocols.user.RegistP.RegistRecordPro buildPartial() {
        cn.mxz.protocols.user.RegistP.RegistRecordPro result = new cn.mxz.protocols.user.RegistP.RegistRecordPro(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rewardId_ = rewardId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.mxz.protocols.user.RegistP.RegistRecordPro) {
          return mergeFrom((cn.mxz.protocols.user.RegistP.RegistRecordPro)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cn.mxz.protocols.user.RegistP.RegistRecordPro other) {
        if (other == cn.mxz.protocols.user.RegistP.RegistRecordPro.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasRewardId()) {
          setRewardId(other.getRewardId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000002;
              rewardId_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 type = 10;
      private int type_ ;
      @Override
	public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
	public int getType() {
        return type_;
      }
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 rewardId = 20;
      private int rewardId_ ;
      @Override
	public boolean hasRewardId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
	public int getRewardId() {
        return rewardId_;
      }
      public Builder setRewardId(int value) {
        bitField0_ |= 0x00000002;
        rewardId_ = value;
        onChanged();
        return this;
      }
      public Builder clearRewardId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rewardId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:cn.mxz.protocols.user.RegistRecordPro)
    }
    
    static {
      defaultInstance = new RegistRecordPro(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cn.mxz.protocols.user.RegistRecordPro)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cn_mxz_protocols_user_CalendarPro_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cn_mxz_protocols_user_CalendarPro_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cn_mxz_protocols_user_RegistRecordPro_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cn_mxz_protocols_user_RegistRecordPro_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\010regist.p\022\025cn.mxz.protocols.user\"q\n\013Cal" +
      "endarPro\022\r\n\005start\030\n \002(\005\022\013\n\003day\030\013 \002(\005\022\r\n\005" +
      "month\030\014 \002(\005\0227\n\007records\030\024 \003(\0132&.cn.mxz.pr" +
      "otocols.user.RegistRecordPro\"1\n\017RegistRe" +
      "cordPro\022\014\n\004type\030\n \002(\005\022\020\n\010rewardId\030\024 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        @Override
		public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_cn_mxz_protocols_user_CalendarPro_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_cn_mxz_protocols_user_CalendarPro_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cn_mxz_protocols_user_CalendarPro_descriptor,
              new java.lang.String[] { "Start", "Day", "Month", "Records", },
              cn.mxz.protocols.user.RegistP.CalendarPro.class,
              cn.mxz.protocols.user.RegistP.CalendarPro.Builder.class);
          internal_static_cn_mxz_protocols_user_RegistRecordPro_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_cn_mxz_protocols_user_RegistRecordPro_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cn_mxz_protocols_user_RegistRecordPro_descriptor,
              new java.lang.String[] { "Type", "RewardId", },
              cn.mxz.protocols.user.RegistP.RegistRecordPro.class,
              cn.mxz.protocols.user.RegistP.RegistRecordPro.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
