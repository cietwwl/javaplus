// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: team.p

package cn.mxz.protocols.user.god;

public final class TeamP {
  private TeamP() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TeamProOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .cn.mxz.protocols.user.god.TeamGrid grids = 10;
    java.util.List<cn.mxz.protocols.user.god.TeamP.TeamGrid> 
        getGridsList();
    cn.mxz.protocols.user.god.TeamP.TeamGrid getGrids(int index);
    int getGridsCount();
    java.util.List<? extends cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder> 
        getGridsOrBuilderList();
    cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder getGridsOrBuilder(
        int index);
  }
  public static final class TeamPro extends
      com.google.protobuf.GeneratedMessage
      implements TeamProOrBuilder {
    // Use TeamPro.newBuilder() to construct.
    private TeamPro(Builder builder) {
      super(builder);
    }
    private TeamPro(boolean noInit) {}
    
    private static final TeamPro defaultInstance;
    public static TeamPro getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public TeamPro getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamPro_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamPro_fieldAccessorTable;
    }
    
    // repeated .cn.mxz.protocols.user.god.TeamGrid grids = 10;
    public static final int GRIDS_FIELD_NUMBER = 10;
    private java.util.List<cn.mxz.protocols.user.god.TeamP.TeamGrid> grids_;
    @Override
	public java.util.List<cn.mxz.protocols.user.god.TeamP.TeamGrid> getGridsList() {
      return grids_;
    }
    @Override
	public java.util.List<? extends cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder> 
        getGridsOrBuilderList() {
      return grids_;
    }
    @Override
	public int getGridsCount() {
      return grids_.size();
    }
    @Override
	public cn.mxz.protocols.user.god.TeamP.TeamGrid getGrids(int index) {
      return grids_.get(index);
    }
    @Override
	public cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder getGridsOrBuilder(
        int index) {
      return grids_.get(index);
    }
    
    private void initFields() {
      grids_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getGridsCount(); i++) {
        if (!getGrids(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < grids_.size(); i++) {
        output.writeMessage(10, grids_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < grids_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, grids_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamPro parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.mxz.protocols.user.god.TeamP.TeamPro prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cn.mxz.protocols.user.god.TeamP.TeamProOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamPro_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamPro_fieldAccessorTable;
      }
      
      // Construct using cn.mxz.protocols.user.god.TeamP.TeamPro.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGridsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      @Override
	public Builder clear() {
        super.clear();
        if (gridsBuilder_ == null) {
          grids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          gridsBuilder_.clear();
        }
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.mxz.protocols.user.god.TeamP.TeamPro.getDescriptor();
      }
      
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamPro getDefaultInstanceForType() {
        return cn.mxz.protocols.user.god.TeamP.TeamPro.getDefaultInstance();
      }
      
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamPro build() {
        cn.mxz.protocols.user.god.TeamP.TeamPro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cn.mxz.protocols.user.god.TeamP.TeamPro buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cn.mxz.protocols.user.god.TeamP.TeamPro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamPro buildPartial() {
        cn.mxz.protocols.user.god.TeamP.TeamPro result = new cn.mxz.protocols.user.god.TeamP.TeamPro(this);
        int from_bitField0_ = bitField0_;
        if (gridsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            grids_ = java.util.Collections.unmodifiableList(grids_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.grids_ = grids_;
        } else {
          result.grids_ = gridsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.mxz.protocols.user.god.TeamP.TeamPro) {
          return mergeFrom((cn.mxz.protocols.user.god.TeamP.TeamPro)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cn.mxz.protocols.user.god.TeamP.TeamPro other) {
        if (other == cn.mxz.protocols.user.god.TeamP.TeamPro.getDefaultInstance()) return this;
        if (gridsBuilder_ == null) {
          if (!other.grids_.isEmpty()) {
            if (grids_.isEmpty()) {
              grids_ = other.grids_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGridsIsMutable();
              grids_.addAll(other.grids_);
            }
            onChanged();
          }
        } else {
          if (!other.grids_.isEmpty()) {
            if (gridsBuilder_.isEmpty()) {
              gridsBuilder_.dispose();
              gridsBuilder_ = null;
              grids_ = other.grids_;
              bitField0_ = (bitField0_ & ~0x00000001);
              gridsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGridsFieldBuilder() : null;
            } else {
              gridsBuilder_.addAllMessages(other.grids_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public final boolean isInitialized() {
        for (int i = 0; i < getGridsCount(); i++) {
          if (!getGrids(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 82: {
              cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder subBuilder = cn.mxz.protocols.user.god.TeamP.TeamGrid.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGrids(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .cn.mxz.protocols.user.god.TeamGrid grids = 10;
      private java.util.List<cn.mxz.protocols.user.god.TeamP.TeamGrid> grids_ =
        java.util.Collections.emptyList();
      private void ensureGridsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          grids_ = new java.util.ArrayList<cn.mxz.protocols.user.god.TeamP.TeamGrid>(grids_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.mxz.protocols.user.god.TeamP.TeamGrid, cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder, cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder> gridsBuilder_;
      
      @Override
	public java.util.List<cn.mxz.protocols.user.god.TeamP.TeamGrid> getGridsList() {
        if (gridsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(grids_);
        } else {
          return gridsBuilder_.getMessageList();
        }
      }
      @Override
	public int getGridsCount() {
        if (gridsBuilder_ == null) {
          return grids_.size();
        } else {
          return gridsBuilder_.getCount();
        }
      }
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamGrid getGrids(int index) {
        if (gridsBuilder_ == null) {
          return grids_.get(index);
        } else {
          return gridsBuilder_.getMessage(index);
        }
      }
      public Builder setGrids(
          int index, cn.mxz.protocols.user.god.TeamP.TeamGrid value) {
        if (gridsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGridsIsMutable();
          grids_.set(index, value);
          onChanged();
        } else {
          gridsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setGrids(
          int index, cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder builderForValue) {
        if (gridsBuilder_ == null) {
          ensureGridsIsMutable();
          grids_.set(index, builderForValue.build());
          onChanged();
        } else {
          gridsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addGrids(cn.mxz.protocols.user.god.TeamP.TeamGrid value) {
        if (gridsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGridsIsMutable();
          grids_.add(value);
          onChanged();
        } else {
          gridsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addGrids(
          int index, cn.mxz.protocols.user.god.TeamP.TeamGrid value) {
        if (gridsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGridsIsMutable();
          grids_.add(index, value);
          onChanged();
        } else {
          gridsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addGrids(
          cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder builderForValue) {
        if (gridsBuilder_ == null) {
          ensureGridsIsMutable();
          grids_.add(builderForValue.build());
          onChanged();
        } else {
          gridsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addGrids(
          int index, cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder builderForValue) {
        if (gridsBuilder_ == null) {
          ensureGridsIsMutable();
          grids_.add(index, builderForValue.build());
          onChanged();
        } else {
          gridsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllGrids(
          java.lang.Iterable<? extends cn.mxz.protocols.user.god.TeamP.TeamGrid> values) {
        if (gridsBuilder_ == null) {
          ensureGridsIsMutable();
          super.addAll(values, grids_);
          onChanged();
        } else {
          gridsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearGrids() {
        if (gridsBuilder_ == null) {
          grids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          gridsBuilder_.clear();
        }
        return this;
      }
      public Builder removeGrids(int index) {
        if (gridsBuilder_ == null) {
          ensureGridsIsMutable();
          grids_.remove(index);
          onChanged();
        } else {
          gridsBuilder_.remove(index);
        }
        return this;
      }
      public cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder getGridsBuilder(
          int index) {
        return getGridsFieldBuilder().getBuilder(index);
      }
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder getGridsOrBuilder(
          int index) {
        if (gridsBuilder_ == null) {
          return grids_.get(index);  } else {
          return gridsBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
	public java.util.List<? extends cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder> 
           getGridsOrBuilderList() {
        if (gridsBuilder_ != null) {
          return gridsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(grids_);
        }
      }
      public cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder addGridsBuilder() {
        return getGridsFieldBuilder().addBuilder(
            cn.mxz.protocols.user.god.TeamP.TeamGrid.getDefaultInstance());
      }
      public cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder addGridsBuilder(
          int index) {
        return getGridsFieldBuilder().addBuilder(
            index, cn.mxz.protocols.user.god.TeamP.TeamGrid.getDefaultInstance());
      }
      public java.util.List<cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder> 
           getGridsBuilderList() {
        return getGridsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.mxz.protocols.user.god.TeamP.TeamGrid, cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder, cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder> 
          getGridsFieldBuilder() {
        if (gridsBuilder_ == null) {
          gridsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.mxz.protocols.user.god.TeamP.TeamGrid, cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder, cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder>(
                  grids_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          grids_ = null;
        }
        return gridsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cn.mxz.protocols.user.god.TeamPro)
    }
    
    static {
      defaultInstance = new TeamPro(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cn.mxz.protocols.user.god.TeamPro)
  }
  
  public interface TeamGridOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 fighterId = 10;
    boolean hasFighterId();
    int getFighterId();
    
    // required bool isOpen = 20;
    boolean hasIsOpen();
    boolean getIsOpen();
    
    // repeated .cn.mxz.protocols.user.equipment.EquipmentPro equipments = 30;
    java.util.List<cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro> 
        getEquipmentsList();
    cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro getEquipments(int index);
    int getEquipmentsCount();
    java.util.List<? extends cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder> 
        getEquipmentsOrBuilderList();
    cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder getEquipmentsOrBuilder(
        int index);
  }
  public static final class TeamGrid extends
      com.google.protobuf.GeneratedMessage
      implements TeamGridOrBuilder {
    // Use TeamGrid.newBuilder() to construct.
    private TeamGrid(Builder builder) {
      super(builder);
    }
    private TeamGrid(boolean noInit) {}
    
    private static final TeamGrid defaultInstance;
    public static TeamGrid getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public TeamGrid getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamGrid_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamGrid_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 fighterId = 10;
    public static final int FIGHTERID_FIELD_NUMBER = 10;
    private int fighterId_;
    @Override
	public boolean hasFighterId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    @Override
	public int getFighterId() {
      return fighterId_;
    }
    
    // required bool isOpen = 20;
    public static final int ISOPEN_FIELD_NUMBER = 20;
    private boolean isOpen_;
    @Override
	public boolean hasIsOpen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    @Override
	public boolean getIsOpen() {
      return isOpen_;
    }
    
    // repeated .cn.mxz.protocols.user.equipment.EquipmentPro equipments = 30;
    public static final int EQUIPMENTS_FIELD_NUMBER = 30;
    private java.util.List<cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro> equipments_;
    @Override
	public java.util.List<cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro> getEquipmentsList() {
      return equipments_;
    }
    @Override
	public java.util.List<? extends cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder> 
        getEquipmentsOrBuilderList() {
      return equipments_;
    }
    @Override
	public int getEquipmentsCount() {
      return equipments_.size();
    }
    @Override
	public cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro getEquipments(int index) {
      return equipments_.get(index);
    }
    @Override
	public cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder getEquipmentsOrBuilder(
        int index) {
      return equipments_.get(index);
    }
    
    private void initFields() {
      fighterId_ = 0;
      isOpen_ = false;
      equipments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasFighterId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsOpen()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getEquipmentsCount(); i++) {
        if (!getEquipments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(10, fighterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(20, isOpen_);
      }
      for (int i = 0; i < equipments_.size(); i++) {
        output.writeMessage(30, equipments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, fighterId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, isOpen_);
      }
      for (int i = 0; i < equipments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, equipments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.god.TeamP.TeamGrid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.mxz.protocols.user.god.TeamP.TeamGrid prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cn.mxz.protocols.user.god.TeamP.TeamGridOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamGrid_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.mxz.protocols.user.god.TeamP.internal_static_cn_mxz_protocols_user_god_TeamGrid_fieldAccessorTable;
      }
      
      // Construct using cn.mxz.protocols.user.god.TeamP.TeamGrid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEquipmentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      @Override
	public Builder clear() {
        super.clear();
        fighterId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isOpen_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (equipmentsBuilder_ == null) {
          equipments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          equipmentsBuilder_.clear();
        }
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.mxz.protocols.user.god.TeamP.TeamGrid.getDescriptor();
      }
      
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamGrid getDefaultInstanceForType() {
        return cn.mxz.protocols.user.god.TeamP.TeamGrid.getDefaultInstance();
      }
      
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamGrid build() {
        cn.mxz.protocols.user.god.TeamP.TeamGrid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cn.mxz.protocols.user.god.TeamP.TeamGrid buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cn.mxz.protocols.user.god.TeamP.TeamGrid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      @Override
	public cn.mxz.protocols.user.god.TeamP.TeamGrid buildPartial() {
        cn.mxz.protocols.user.god.TeamP.TeamGrid result = new cn.mxz.protocols.user.god.TeamP.TeamGrid(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fighterId_ = fighterId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isOpen_ = isOpen_;
        if (equipmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            equipments_ = java.util.Collections.unmodifiableList(equipments_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.equipments_ = equipments_;
        } else {
          result.equipments_ = equipmentsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.mxz.protocols.user.god.TeamP.TeamGrid) {
          return mergeFrom((cn.mxz.protocols.user.god.TeamP.TeamGrid)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cn.mxz.protocols.user.god.TeamP.TeamGrid other) {
        if (other == cn.mxz.protocols.user.god.TeamP.TeamGrid.getDefaultInstance()) return this;
        if (other.hasFighterId()) {
          setFighterId(other.getFighterId());
        }
        if (other.hasIsOpen()) {
          setIsOpen(other.getIsOpen());
        }
        if (equipmentsBuilder_ == null) {
          if (!other.equipments_.isEmpty()) {
            if (equipments_.isEmpty()) {
              equipments_ = other.equipments_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureEquipmentsIsMutable();
              equipments_.addAll(other.equipments_);
            }
            onChanged();
          }
        } else {
          if (!other.equipments_.isEmpty()) {
            if (equipmentsBuilder_.isEmpty()) {
              equipmentsBuilder_.dispose();
              equipmentsBuilder_ = null;
              equipments_ = other.equipments_;
              bitField0_ = (bitField0_ & ~0x00000004);
              equipmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEquipmentsFieldBuilder() : null;
            } else {
              equipmentsBuilder_.addAllMessages(other.equipments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public final boolean isInitialized() {
        if (!hasFighterId()) {
          
          return false;
        }
        if (!hasIsOpen()) {
          
          return false;
        }
        for (int i = 0; i < getEquipmentsCount(); i++) {
          if (!getEquipments(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000001;
              fighterId_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000002;
              isOpen_ = input.readBool();
              break;
            }
            case 242: {
              cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder subBuilder = cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEquipments(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 fighterId = 10;
      private int fighterId_ ;
      @Override
	public boolean hasFighterId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
	public int getFighterId() {
        return fighterId_;
      }
      public Builder setFighterId(int value) {
        bitField0_ |= 0x00000001;
        fighterId_ = value;
        onChanged();
        return this;
      }
      public Builder clearFighterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fighterId_ = 0;
        onChanged();
        return this;
      }
      
      // required bool isOpen = 20;
      private boolean isOpen_ ;
      @Override
	public boolean hasIsOpen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
	public boolean getIsOpen() {
        return isOpen_;
      }
      public Builder setIsOpen(boolean value) {
        bitField0_ |= 0x00000002;
        isOpen_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsOpen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isOpen_ = false;
        onChanged();
        return this;
      }
      
      // repeated .cn.mxz.protocols.user.equipment.EquipmentPro equipments = 30;
      private java.util.List<cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro> equipments_ =
        java.util.Collections.emptyList();
      private void ensureEquipmentsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          equipments_ = new java.util.ArrayList<cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro>(equipments_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder> equipmentsBuilder_;
      
      @Override
	public java.util.List<cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro> getEquipmentsList() {
        if (equipmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(equipments_);
        } else {
          return equipmentsBuilder_.getMessageList();
        }
      }
      @Override
	public int getEquipmentsCount() {
        if (equipmentsBuilder_ == null) {
          return equipments_.size();
        } else {
          return equipmentsBuilder_.getCount();
        }
      }
      @Override
	public cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro getEquipments(int index) {
        if (equipmentsBuilder_ == null) {
          return equipments_.get(index);
        } else {
          return equipmentsBuilder_.getMessage(index);
        }
      }
      public Builder setEquipments(
          int index, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro value) {
        if (equipmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipmentsIsMutable();
          equipments_.set(index, value);
          onChanged();
        } else {
          equipmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setEquipments(
          int index, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder builderForValue) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.set(index, builderForValue.build());
          onChanged();
        } else {
          equipmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addEquipments(cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro value) {
        if (equipmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipmentsIsMutable();
          equipments_.add(value);
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addEquipments(
          int index, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro value) {
        if (equipmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipmentsIsMutable();
          equipments_.add(index, value);
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addEquipments(
          cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder builderForValue) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.add(builderForValue.build());
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addEquipments(
          int index, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder builderForValue) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.add(index, builderForValue.build());
          onChanged();
        } else {
          equipmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEquipments(
          java.lang.Iterable<? extends cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro> values) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          super.addAll(values, equipments_);
          onChanged();
        } else {
          equipmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearEquipments() {
        if (equipmentsBuilder_ == null) {
          equipments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          equipmentsBuilder_.clear();
        }
        return this;
      }
      public Builder removeEquipments(int index) {
        if (equipmentsBuilder_ == null) {
          ensureEquipmentsIsMutable();
          equipments_.remove(index);
          onChanged();
        } else {
          equipmentsBuilder_.remove(index);
        }
        return this;
      }
      public cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder getEquipmentsBuilder(
          int index) {
        return getEquipmentsFieldBuilder().getBuilder(index);
      }
      @Override
	public cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder getEquipmentsOrBuilder(
          int index) {
        if (equipmentsBuilder_ == null) {
          return equipments_.get(index);  } else {
          return equipmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
	public java.util.List<? extends cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder> 
           getEquipmentsOrBuilderList() {
        if (equipmentsBuilder_ != null) {
          return equipmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(equipments_);
        }
      }
      public cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder addEquipmentsBuilder() {
        return getEquipmentsFieldBuilder().addBuilder(
            cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.getDefaultInstance());
      }
      public cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder addEquipmentsBuilder(
          int index) {
        return getEquipmentsFieldBuilder().addBuilder(
            index, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.getDefaultInstance());
      }
      public java.util.List<cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder> 
           getEquipmentsBuilderList() {
        return getEquipmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder> 
          getEquipmentsFieldBuilder() {
        if (equipmentsBuilder_ == null) {
          equipmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentPro.Builder, cn.mxz.protocols.user.equipment.EquipmentP.EquipmentProOrBuilder>(
                  equipments_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          equipments_ = null;
        }
        return equipmentsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:cn.mxz.protocols.user.god.TeamGrid)
    }
    
    static {
      defaultInstance = new TeamGrid(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cn.mxz.protocols.user.god.TeamGrid)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cn_mxz_protocols_user_god_TeamPro_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cn_mxz_protocols_user_god_TeamPro_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cn_mxz_protocols_user_god_TeamGrid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cn_mxz_protocols_user_god_TeamGrid_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\006team.p\022\031cn.mxz.protocols.user.god\032\013equ" +
      "ipment.p\"=\n\007TeamPro\0222\n\005grids\030\n \003(\0132#.cn." +
      "mxz.protocols.user.god.TeamGrid\"p\n\010TeamG" +
      "rid\022\021\n\tfighterId\030\n \002(\005\022\016\n\006isOpen\030\024 \002(\010\022A" +
      "\n\nequipments\030\036 \003(\0132-.cn.mxz.protocols.us" +
      "er.equipment.EquipmentPro"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        @Override
		public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_cn_mxz_protocols_user_god_TeamPro_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_cn_mxz_protocols_user_god_TeamPro_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cn_mxz_protocols_user_god_TeamPro_descriptor,
              new java.lang.String[] { "Grids", },
              cn.mxz.protocols.user.god.TeamP.TeamPro.class,
              cn.mxz.protocols.user.god.TeamP.TeamPro.Builder.class);
          internal_static_cn_mxz_protocols_user_god_TeamGrid_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_cn_mxz_protocols_user_god_TeamGrid_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cn_mxz_protocols_user_god_TeamGrid_descriptor,
              new java.lang.String[] { "FighterId", "IsOpen", "Equipments", },
              cn.mxz.protocols.user.god.TeamP.TeamGrid.class,
              cn.mxz.protocols.user.god.TeamP.TeamGrid.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.mxz.protocols.user.equipment.EquipmentP.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
