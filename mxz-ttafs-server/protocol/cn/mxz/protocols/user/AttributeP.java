// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: attribute.p

package cn.mxz.protocols.user;

public final class AttributeP {
  private AttributeP() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AttributeProOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 hp = 10;
    boolean hasHp();
    int getHp();
    
    // required int32 attack = 20;
    boolean hasAttack();
    int getAttack();
    
    // required int32 defend = 30;
    boolean hasDefend();
    int getDefend();
    
    // required int32 mAttack = 40;
    boolean hasMAttack();
    int getMAttack();
    
    // required int32 mDefend = 50;
    boolean hasMDefend();
    int getMDefend();
    
    // required int32 speed = 60;
    boolean hasSpeed();
    int getSpeed();
    
    // required int32 crit = 70;
    boolean hasCrit();
    int getCrit();
    
    // required int32 rCrit = 80;
    boolean hasRCrit();
    int getRCrit();
    
    // required int32 critAddition = 90;
    boolean hasCritAddition();
    int getCritAddition();
    
    // required int32 hit = 100;
    boolean hasHit();
    int getHit();
    
    // required int32 dodge = 110;
    boolean hasDodge();
    int getDodge();
    
    // required int32 block = 120;
    boolean hasBlock();
    int getBlock();
    
    // required int32 rBlock = 130;
    boolean hasRBlock();
    int getRBlock();
    
    // required int32 magic = 140;
    boolean hasMagic();
    int getMagic();
  }
  public static final class AttributePro extends
      com.google.protobuf.GeneratedMessage
      implements AttributeProOrBuilder {
    // Use AttributePro.newBuilder() to construct.
    private AttributePro(Builder builder) {
      super(builder);
    }
    private AttributePro(boolean noInit) {}
    
    private static final AttributePro defaultInstance;
    public static AttributePro getDefaultInstance() {
      return defaultInstance;
    }
    
    @Override
	public AttributePro getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.mxz.protocols.user.AttributeP.internal_static_cn_mxz_protocols_user_AttributePro_descriptor;
    }
    
    @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.mxz.protocols.user.AttributeP.internal_static_cn_mxz_protocols_user_AttributePro_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 hp = 10;
    public static final int HP_FIELD_NUMBER = 10;
    private int hp_;
    @Override
	public boolean hasHp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    @Override
	public int getHp() {
      return hp_;
    }
    
    // required int32 attack = 20;
    public static final int ATTACK_FIELD_NUMBER = 20;
    private int attack_;
    @Override
	public boolean hasAttack() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    @Override
	public int getAttack() {
      return attack_;
    }
    
    // required int32 defend = 30;
    public static final int DEFEND_FIELD_NUMBER = 30;
    private int defend_;
    @Override
	public boolean hasDefend() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    @Override
	public int getDefend() {
      return defend_;
    }
    
    // required int32 mAttack = 40;
    public static final int MATTACK_FIELD_NUMBER = 40;
    private int mAttack_;
    @Override
	public boolean hasMAttack() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    @Override
	public int getMAttack() {
      return mAttack_;
    }
    
    // required int32 mDefend = 50;
    public static final int MDEFEND_FIELD_NUMBER = 50;
    private int mDefend_;
    @Override
	public boolean hasMDefend() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    @Override
	public int getMDefend() {
      return mDefend_;
    }
    
    // required int32 speed = 60;
    public static final int SPEED_FIELD_NUMBER = 60;
    private int speed_;
    @Override
	public boolean hasSpeed() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    @Override
	public int getSpeed() {
      return speed_;
    }
    
    // required int32 crit = 70;
    public static final int CRIT_FIELD_NUMBER = 70;
    private int crit_;
    @Override
	public boolean hasCrit() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    @Override
	public int getCrit() {
      return crit_;
    }
    
    // required int32 rCrit = 80;
    public static final int RCRIT_FIELD_NUMBER = 80;
    private int rCrit_;
    @Override
	public boolean hasRCrit() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    @Override
	public int getRCrit() {
      return rCrit_;
    }
    
    // required int32 critAddition = 90;
    public static final int CRITADDITION_FIELD_NUMBER = 90;
    private int critAddition_;
    @Override
	public boolean hasCritAddition() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    @Override
	public int getCritAddition() {
      return critAddition_;
    }
    
    // required int32 hit = 100;
    public static final int HIT_FIELD_NUMBER = 100;
    private int hit_;
    @Override
	public boolean hasHit() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    @Override
	public int getHit() {
      return hit_;
    }
    
    // required int32 dodge = 110;
    public static final int DODGE_FIELD_NUMBER = 110;
    private int dodge_;
    @Override
	public boolean hasDodge() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    @Override
	public int getDodge() {
      return dodge_;
    }
    
    // required int32 block = 120;
    public static final int BLOCK_FIELD_NUMBER = 120;
    private int block_;
    @Override
	public boolean hasBlock() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    @Override
	public int getBlock() {
      return block_;
    }
    
    // required int32 rBlock = 130;
    public static final int RBLOCK_FIELD_NUMBER = 130;
    private int rBlock_;
    @Override
	public boolean hasRBlock() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    @Override
	public int getRBlock() {
      return rBlock_;
    }
    
    // required int32 magic = 140;
    public static final int MAGIC_FIELD_NUMBER = 140;
    private int magic_;
    @Override
	public boolean hasMagic() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    @Override
	public int getMagic() {
      return magic_;
    }
    
    private void initFields() {
      hp_ = 0;
      attack_ = 0;
      defend_ = 0;
      mAttack_ = 0;
      mDefend_ = 0;
      speed_ = 0;
      crit_ = 0;
      rCrit_ = 0;
      critAddition_ = 0;
      hit_ = 0;
      dodge_ = 0;
      block_ = 0;
      rBlock_ = 0;
      magic_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    @Override
	public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDefend()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMAttack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMDefend()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCrit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRCrit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCritAddition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDodge()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRBlock()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMagic()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    @Override
	public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(10, hp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(20, attack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(30, defend_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(40, mAttack_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(50, mDefend_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(60, speed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(70, crit_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(80, rCrit_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(90, critAddition_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(100, hit_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(110, dodge_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(120, block_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(130, rBlock_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(140, magic_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    @Override
	public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, hp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, attack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, defend_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(40, mAttack_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(50, mDefend_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(60, speed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(70, crit_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(80, rCrit_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(90, critAddition_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(100, hit_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(110, dodge_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(120, block_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(130, rBlock_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(140, magic_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static cn.mxz.protocols.user.AttributeP.AttributePro parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    @Override
	public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(cn.mxz.protocols.user.AttributeP.AttributePro prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
	public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements cn.mxz.protocols.user.AttributeP.AttributeProOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.mxz.protocols.user.AttributeP.internal_static_cn_mxz_protocols_user_AttributePro_descriptor;
      }
      
      @Override
	protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.mxz.protocols.user.AttributeP.internal_static_cn_mxz_protocols_user_AttributePro_fieldAccessorTable;
      }
      
      // Construct using cn.mxz.protocols.user.AttributeP.AttributePro.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      @Override
	public Builder clear() {
        super.clear();
        hp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        attack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        defend_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        mAttack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mDefend_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        crit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        rCrit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        critAddition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        hit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        dodge_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        block_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        rBlock_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        magic_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      @Override
	public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      @Override
	public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.mxz.protocols.user.AttributeP.AttributePro.getDescriptor();
      }
      
      @Override
	public cn.mxz.protocols.user.AttributeP.AttributePro getDefaultInstanceForType() {
        return cn.mxz.protocols.user.AttributeP.AttributePro.getDefaultInstance();
      }
      
      @Override
	public cn.mxz.protocols.user.AttributeP.AttributePro build() {
        cn.mxz.protocols.user.AttributeP.AttributePro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private cn.mxz.protocols.user.AttributeP.AttributePro buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        cn.mxz.protocols.user.AttributeP.AttributePro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      @Override
	public cn.mxz.protocols.user.AttributeP.AttributePro buildPartial() {
        cn.mxz.protocols.user.AttributeP.AttributePro result = new cn.mxz.protocols.user.AttributeP.AttributePro(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hp_ = hp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.attack_ = attack_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.defend_ = defend_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mAttack_ = mAttack_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mDefend_ = mDefend_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.crit_ = crit_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rCrit_ = rCrit_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.critAddition_ = critAddition_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.hit_ = hit_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.dodge_ = dodge_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.block_ = block_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.rBlock_ = rBlock_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.magic_ = magic_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      @Override
	public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.mxz.protocols.user.AttributeP.AttributePro) {
          return mergeFrom((cn.mxz.protocols.user.AttributeP.AttributePro)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(cn.mxz.protocols.user.AttributeP.AttributePro other) {
        if (other == cn.mxz.protocols.user.AttributeP.AttributePro.getDefaultInstance()) return this;
        if (other.hasHp()) {
          setHp(other.getHp());
        }
        if (other.hasAttack()) {
          setAttack(other.getAttack());
        }
        if (other.hasDefend()) {
          setDefend(other.getDefend());
        }
        if (other.hasMAttack()) {
          setMAttack(other.getMAttack());
        }
        if (other.hasMDefend()) {
          setMDefend(other.getMDefend());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCrit()) {
          setCrit(other.getCrit());
        }
        if (other.hasRCrit()) {
          setRCrit(other.getRCrit());
        }
        if (other.hasCritAddition()) {
          setCritAddition(other.getCritAddition());
        }
        if (other.hasHit()) {
          setHit(other.getHit());
        }
        if (other.hasDodge()) {
          setDodge(other.getDodge());
        }
        if (other.hasBlock()) {
          setBlock(other.getBlock());
        }
        if (other.hasRBlock()) {
          setRBlock(other.getRBlock());
        }
        if (other.hasMagic()) {
          setMagic(other.getMagic());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      @Override
	public final boolean isInitialized() {
        if (!hasHp()) {
          
          return false;
        }
        if (!hasAttack()) {
          
          return false;
        }
        if (!hasDefend()) {
          
          return false;
        }
        if (!hasMAttack()) {
          
          return false;
        }
        if (!hasMDefend()) {
          
          return false;
        }
        if (!hasSpeed()) {
          
          return false;
        }
        if (!hasCrit()) {
          
          return false;
        }
        if (!hasRCrit()) {
          
          return false;
        }
        if (!hasCritAddition()) {
          
          return false;
        }
        if (!hasHit()) {
          
          return false;
        }
        if (!hasDodge()) {
          
          return false;
        }
        if (!hasBlock()) {
          
          return false;
        }
        if (!hasRBlock()) {
          
          return false;
        }
        if (!hasMagic()) {
          
          return false;
        }
        return true;
      }
      
      @Override
	public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000001;
              hp_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000002;
              attack_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00000004;
              defend_ = input.readInt32();
              break;
            }
            case 320: {
              bitField0_ |= 0x00000008;
              mAttack_ = input.readInt32();
              break;
            }
            case 400: {
              bitField0_ |= 0x00000010;
              mDefend_ = input.readInt32();
              break;
            }
            case 480: {
              bitField0_ |= 0x00000020;
              speed_ = input.readInt32();
              break;
            }
            case 560: {
              bitField0_ |= 0x00000040;
              crit_ = input.readInt32();
              break;
            }
            case 640: {
              bitField0_ |= 0x00000080;
              rCrit_ = input.readInt32();
              break;
            }
            case 720: {
              bitField0_ |= 0x00000100;
              critAddition_ = input.readInt32();
              break;
            }
            case 800: {
              bitField0_ |= 0x00000200;
              hit_ = input.readInt32();
              break;
            }
            case 880: {
              bitField0_ |= 0x00000400;
              dodge_ = input.readInt32();
              break;
            }
            case 960: {
              bitField0_ |= 0x00000800;
              block_ = input.readInt32();
              break;
            }
            case 1040: {
              bitField0_ |= 0x00001000;
              rBlock_ = input.readInt32();
              break;
            }
            case 1120: {
              bitField0_ |= 0x00002000;
              magic_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 hp = 10;
      private int hp_ ;
      @Override
	public boolean hasHp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
	public int getHp() {
        return hp_;
      }
      public Builder setHp(int value) {
        bitField0_ |= 0x00000001;
        hp_ = value;
        onChanged();
        return this;
      }
      public Builder clearHp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hp_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 attack = 20;
      private int attack_ ;
      @Override
	public boolean hasAttack() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
	public int getAttack() {
        return attack_;
      }
      public Builder setAttack(int value) {
        bitField0_ |= 0x00000002;
        attack_ = value;
        onChanged();
        return this;
      }
      public Builder clearAttack() {
        bitField0_ = (bitField0_ & ~0x00000002);
        attack_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 defend = 30;
      private int defend_ ;
      @Override
	public boolean hasDefend() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      @Override
	public int getDefend() {
        return defend_;
      }
      public Builder setDefend(int value) {
        bitField0_ |= 0x00000004;
        defend_ = value;
        onChanged();
        return this;
      }
      public Builder clearDefend() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defend_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 mAttack = 40;
      private int mAttack_ ;
      @Override
	public boolean hasMAttack() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      @Override
	public int getMAttack() {
        return mAttack_;
      }
      public Builder setMAttack(int value) {
        bitField0_ |= 0x00000008;
        mAttack_ = value;
        onChanged();
        return this;
      }
      public Builder clearMAttack() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mAttack_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 mDefend = 50;
      private int mDefend_ ;
      @Override
	public boolean hasMDefend() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      @Override
	public int getMDefend() {
        return mDefend_;
      }
      public Builder setMDefend(int value) {
        bitField0_ |= 0x00000010;
        mDefend_ = value;
        onChanged();
        return this;
      }
      public Builder clearMDefend() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mDefend_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 speed = 60;
      private int speed_ ;
      @Override
	public boolean hasSpeed() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      @Override
	public int getSpeed() {
        return speed_;
      }
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000020;
        speed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        speed_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 crit = 70;
      private int crit_ ;
      @Override
	public boolean hasCrit() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      @Override
	public int getCrit() {
        return crit_;
      }
      public Builder setCrit(int value) {
        bitField0_ |= 0x00000040;
        crit_ = value;
        onChanged();
        return this;
      }
      public Builder clearCrit() {
        bitField0_ = (bitField0_ & ~0x00000040);
        crit_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 rCrit = 80;
      private int rCrit_ ;
      @Override
	public boolean hasRCrit() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      @Override
	public int getRCrit() {
        return rCrit_;
      }
      public Builder setRCrit(int value) {
        bitField0_ |= 0x00000080;
        rCrit_ = value;
        onChanged();
        return this;
      }
      public Builder clearRCrit() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rCrit_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 critAddition = 90;
      private int critAddition_ ;
      @Override
	public boolean hasCritAddition() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      @Override
	public int getCritAddition() {
        return critAddition_;
      }
      public Builder setCritAddition(int value) {
        bitField0_ |= 0x00000100;
        critAddition_ = value;
        onChanged();
        return this;
      }
      public Builder clearCritAddition() {
        bitField0_ = (bitField0_ & ~0x00000100);
        critAddition_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 hit = 100;
      private int hit_ ;
      @Override
	public boolean hasHit() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      @Override
	public int getHit() {
        return hit_;
      }
      public Builder setHit(int value) {
        bitField0_ |= 0x00000200;
        hit_ = value;
        onChanged();
        return this;
      }
      public Builder clearHit() {
        bitField0_ = (bitField0_ & ~0x00000200);
        hit_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 dodge = 110;
      private int dodge_ ;
      @Override
	public boolean hasDodge() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      @Override
	public int getDodge() {
        return dodge_;
      }
      public Builder setDodge(int value) {
        bitField0_ |= 0x00000400;
        dodge_ = value;
        onChanged();
        return this;
      }
      public Builder clearDodge() {
        bitField0_ = (bitField0_ & ~0x00000400);
        dodge_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 block = 120;
      private int block_ ;
      @Override
	public boolean hasBlock() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      @Override
	public int getBlock() {
        return block_;
      }
      public Builder setBlock(int value) {
        bitField0_ |= 0x00000800;
        block_ = value;
        onChanged();
        return this;
      }
      public Builder clearBlock() {
        bitField0_ = (bitField0_ & ~0x00000800);
        block_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 rBlock = 130;
      private int rBlock_ ;
      @Override
	public boolean hasRBlock() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      @Override
	public int getRBlock() {
        return rBlock_;
      }
      public Builder setRBlock(int value) {
        bitField0_ |= 0x00001000;
        rBlock_ = value;
        onChanged();
        return this;
      }
      public Builder clearRBlock() {
        bitField0_ = (bitField0_ & ~0x00001000);
        rBlock_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 magic = 140;
      private int magic_ ;
      @Override
	public boolean hasMagic() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      @Override
	public int getMagic() {
        return magic_;
      }
      public Builder setMagic(int value) {
        bitField0_ |= 0x00002000;
        magic_ = value;
        onChanged();
        return this;
      }
      public Builder clearMagic() {
        bitField0_ = (bitField0_ & ~0x00002000);
        magic_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:cn.mxz.protocols.user.AttributePro)
    }
    
    static {
      defaultInstance = new AttributePro(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:cn.mxz.protocols.user.AttributePro)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_cn_mxz_protocols_user_AttributePro_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cn_mxz_protocols_user_AttributePro_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013attribute.p\022\025cn.mxz.protocols.user\"\352\001\n" +
      "\014AttributePro\022\n\n\002hp\030\n \002(\005\022\016\n\006attack\030\024 \002(" +
      "\005\022\016\n\006defend\030\036 \002(\005\022\017\n\007mAttack\030( \002(\005\022\017\n\007mD" +
      "efend\0302 \002(\005\022\r\n\005speed\030< \002(\005\022\014\n\004crit\030F \002(\005" +
      "\022\r\n\005rCrit\030P \002(\005\022\024\n\014critAddition\030Z \002(\005\022\013\n" +
      "\003hit\030d \002(\005\022\r\n\005dodge\030n \002(\005\022\r\n\005block\030x \002(\005" +
      "\022\017\n\006rBlock\030\202\001 \002(\005\022\016\n\005magic\030\214\001 \002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        @Override
		public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_cn_mxz_protocols_user_AttributePro_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_cn_mxz_protocols_user_AttributePro_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_cn_mxz_protocols_user_AttributePro_descriptor,
              new java.lang.String[] { "Hp", "Attack", "Defend", "MAttack", "MDefend", "Speed", "Crit", "RCrit", "CritAddition", "Hit", "Dodge", "Block", "RBlock", "Magic", },
              cn.mxz.protocols.user.AttributeP.AttributePro.class,
              cn.mxz.protocols.user.AttributeP.AttributePro.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
