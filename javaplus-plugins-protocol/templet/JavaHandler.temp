package PACKAGE_NAME;

import java.util.List;

import cn.javaplus.common.util.buffer.InBuffer;
import cn.javaplus.common.util.comunication.Response;
import cn.mxz.factory.IFactory;
import cn.mxz.communication.handler.DataHandler;
import cn.mxz.base.exception.ClientException;

/**
 * 数据处理器
 */
public class DataHandlerImpl implements DataHandler{

	@Override
	public int onData(InBuffer in, List<Response> r, IFactory factory) throws Throwable {

		int packetId = in.getInt();

		dispatch(in, packetId, r, factory);

		return packetId;
	}

	private Response createResponse(IFactory f) {
		return (Response) f.get("packet_server_2_client");
	}

	private void dispatch(InBuffer in, int packetId, List<Response> r, IFactory factory) throws Throwable {

		Response response = createResponse(factory);
		response.putInt(packetId);
		r.add(response);

		switch (packetId) {

PACKET_CASES

		default:
			throw new cn.mxz.base.exception.IllegalProtocolException("请更新协议!");
		}
	}
}